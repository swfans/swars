
#ifdef NEED_UNDERSCORE
# define TRANSFORM_SYMBOLS
# define EXPORT_SYMBOL(sym) _ ## sym
#else
# define EXPORT_SYMBOL(sym) sym
#endif

#ifndef TRANSFORM_SYMBOLS

# define GLOBAL(sym) \
  .global sym; \
  sym ##:

# define GLOBAL_FUNC(sym) \
  GLOBAL (sym)

#else

# define GLOBAL(sym) \
  .global EXPORT_SYMBOL (sym); \
  EXPORT_SYMBOL (sym) ##: \
  sym ##:

# define GLOBAL_FUNC(sym) \
  .global sym; \
  GLOBAL (sym)

#endif


.text

.global EXPORT_SYMBOL(lbDisplay);

.global EXPORT_SYMBOL(alpha_xsteps_array);
.global EXPORT_SYMBOL(alpha_ysteps_array);
.global EXPORT_SYMBOL(alpha_scale_up);


/*----------------------------------------------------------------*/
GLOBAL_FUNC (ASM_LbDrawBox)
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		sub    $0x10,%esp
		mov    %eax,-0x10(%ebp)
		mov    %edx,-0xc(%ebp)
		mov    %ebx,-0x8(%ebp)
		mov    %ecx,-0x4(%ebp)
		testb  $0x10,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_e74f1
		mov    -0x8(%ebp),%edx
		cmp    $0x1,%edx
		jl     jump_e745d
		cmpl   $0x1,-0x4(%ebp)
		jge    jump_e7467
	jump_e745d:
		mov    $0xffffffff,%eax
		jmp    jump_e750d
	jump_e7467:
		xor    %eax,%eax
		mov    0x8(%ebp),%al
		mov    -0xc(%ebp),%ecx
		mov    -0x10(%ebp),%ebx
		add    -0x8(%ebp),%ebx
		dec    %ebx
		mov    -0xc(%ebp),%edx
		push   %eax
		mov    -0x10(%ebp),%eax
		call   ac_LbDrawHVLine
		xor    %eax,%eax
		mov    0x8(%ebp),%al
		mov    -0xc(%ebp),%ecx
		add    -0x4(%ebp),%ecx
		dec    %ecx
		mov    -0x10(%ebp),%ebx
		push   %eax
		add    -0x8(%ebp),%ebx
		dec    %ebx
		mov    -0xc(%ebp),%edx
		add    -0x4(%ebp),%edx
		dec    %edx
		mov    -0x10(%ebp),%eax
		call   ac_LbDrawHVLine
		cmpl   $0x2,-0x4(%ebp)
		jbe    jump_e7508
		xor    %eax,%eax
		mov    0x8(%ebp),%al
		mov    -0xc(%ebp),%ecx
		push   %eax
		add    -0x4(%ebp),%ecx
		sub    $0x2,%ecx
		mov    -0x10(%ebp),%ebx
		mov    -0xc(%ebp),%edx
		inc    %edx
		mov    -0x10(%ebp),%eax
		call   ac_LbDrawHVLine
		xor    %eax,%eax
		mov    0x8(%ebp),%al
		mov    -0xc(%ebp),%ecx
		add    -0x4(%ebp),%ecx
		sub    $0x2,%ecx
		mov    -0x10(%ebp),%ebx
		add    -0x8(%ebp),%ebx
		dec    %ebx
		mov    -0xc(%ebp),%edx
		inc    %edx
		push   %eax
		mov    -0x10(%ebp),%eax
		add    -0x8(%ebp),%eax
		dec    %eax
		call   ac_LbDrawHVLine
		jmp    jump_e7508
	jump_e74f1:
		xor    %eax,%eax
		mov    0x8(%ebp),%al
		mov    -0x4(%ebp),%ecx
		mov    -0x8(%ebp),%ebx
		mov    -0xc(%ebp),%edx
		push   %eax
		mov    -0x10(%ebp),%eax
		call   LbDrawBoxClip_
	jump_e7508:
		mov    $0x1,%eax
	jump_e750d:
		mov    %ebp,%esp
		pop    %ebp
		ret    $0x4


/*----------------------------------------------------------------*/
GLOBAL_FUNC (ASM_LbDrawLine)
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0xa4,%esp
		sub    $0x7e,%ebp
		mov    %eax,-0x26(%ebp)
		mov    %edx,-0x22(%ebp)
		mov    %ebx,-0x1e(%ebp)
		mov    %ecx,-0x1a(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+48,%ebx # lbDisplay.GraphicsWindowWidth
		dec    %ebx
		cmpl   $0x0,-0x26(%ebp)
		jge    jump_e7663
		mov    -0x1e(%ebp),%ecx
		test   %ecx,%ecx
		jge    jump_e75c9
		mov    $0x1,%al
		jmp    jump_e79cd
	jump_e75c9:
		mov    -0x26(%ebp),%eax
		mov    -0x1e(%ebp),%esi
		sub    %esi,%eax
		mov    %eax,-0x16(%ebp)
		mov    -0x26(%ebp),%eax
		mov    %eax,-0x12(%ebp)
		mov    -0x22(%ebp),%eax
		mov    -0x1a(%ebp),%edi
		sub    %edi,%eax
		mov    %eax,-0xe(%ebp)
		mov    -0xe(%ebp),%edx
		mov    -0x12(%ebp),%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    -0x16(%ebp),%ecx
		idiv   %ecx
		mov    %eax,-0xe(%ebp)
		xor    %esi,%esi
		mov    %esi,-0x26(%ebp)
		mov    -0xe(%ebp),%eax
		sub    %eax,-0x22(%ebp)
		movb   $0x1,0x7a(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    EXPORT_SYMBOL(lbDisplay)+48,%edx # lbDisplay.GraphicsWindowWidth
		cmp    %edx,%eax
		jl     jump_e77ab
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%ecx
		sub    %ecx,%eax
		mov    %eax,-0xa(%ebp)
		mov    -0x1e(%ebp),%eax
		sub    %ebx,%eax
		mov    %eax,-0x6(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%esi
		sub    %esi,%eax
		mov    %eax,-0x2(%ebp)
		mov    -0x2(%ebp),%edx
		mov    -0x6(%ebp),%edi
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    -0xa(%ebp),%ebx
		idiv   %ebx
		mov    %eax,-0x2(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+48,%eax # lbDisplay.GraphicsWindowWidth
		dec    %eax
		mov    %eax,-0x1e(%ebp)
		mov    -0x2(%ebp),%eax
		sub    %eax,-0x1a(%ebp)
		jmp    jump_e77ab
	jump_e7663:
		mov    -0x26(%ebp),%eax
		mov    EXPORT_SYMBOL(lbDisplay)+48,%esi # lbDisplay.GraphicsWindowWidth
		cmp    %esi,%eax
		jl     jump_e771a
		mov    -0x1e(%ebp),%eax
		cmp    %esi,%eax
		jl     jump_e7686
		mov    $0x1,%al
		lea    0x7e(%ebp),%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4
	jump_e7686:
		mov    -0x26(%ebp),%eax
		mov    -0x1e(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,0x2(%ebp)
		mov    -0x26(%ebp),%eax
		sub    %ebx,%eax
		mov    %eax,0x6(%ebp)
		mov    -0x22(%ebp),%eax
		mov    -0x1a(%ebp),%ebx
		sub    %ebx,%eax
		mov    %eax,0xa(%ebp)
		mov    0xa(%ebp),%edx
		mov    0x6(%ebp),%ecx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x2(%ebp),%esi
		idiv   %esi
		mov    %eax,0xa(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+48,%eax # lbDisplay.GraphicsWindowWidth
		dec    %eax
		mov    %eax,-0x26(%ebp)
		mov    0xa(%ebp),%eax
		sub    %eax,-0x22(%ebp)
		movb   $0x1,0x7a(%ebp)
		mov    -0x1e(%ebp),%eax
		test   %eax,%eax
		jge    jump_e77ab
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,0xe(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    %eax,0x12(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x16(%ebp)
		mov    0x16(%ebp),%edx
		mov    0x12(%ebp),%ecx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0xe(%ebp),%esi
		idiv   %esi
		mov    %eax,0x16(%ebp)
		xor    %edi,%edi
		mov    %edi,-0x1e(%ebp)
		mov    0x16(%ebp),%eax
		sub    %eax,-0x1a(%ebp)
		jmp    jump_e77ab
	jump_e771a:
		mov    -0x1e(%ebp),%ecx
		test   %ecx,%ecx
		jge    jump_e775d
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%esi
		sub    %esi,%eax
		mov    %eax,0x1a(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    %eax,0x1e(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%edi
		sub    %edi,%eax
		mov    %eax,0x22(%ebp)
		mov    0x22(%ebp),%edx
		mov    0x1e(%ebp),%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x1a(%ebp),%ebx
		idiv   %ebx
		mov    %eax,0x22(%ebp)
		xor    %ecx,%ecx
		mov    %ecx,-0x1e(%ebp)
		mov    0x22(%ebp),%eax
		jmp    jump_e77a4
	jump_e775d:
		mov    -0x1e(%ebp),%eax
		cmp    %esi,%eax
		jl     jump_e77ab
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,0x26(%ebp)
		mov    -0x1e(%ebp),%eax
		sub    %ebx,%eax
		mov    %eax,0x2a(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x2e(%ebp)
		mov    0x2e(%ebp),%edx
		mov    0x2a(%ebp),%ecx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x26(%ebp),%esi
		idiv   %esi
		mov    %eax,0x2e(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+48,%eax # lbDisplay.GraphicsWindowWidth
		dec    %eax
		mov    %eax,-0x1e(%ebp)
		mov    0x2e(%ebp),%eax
	jump_e77a4:
		sub    %eax,-0x1a(%ebp)
		movb   $0x1,0x7a(%ebp)
	jump_e77ab:
		mov    EXPORT_SYMBOL(lbDisplay)+52,%ebx # lbDisplay.GraphicsWindowHeight
		dec    %ebx
		cmpl   $0x0,-0x22(%ebp)
		jge    jump_e7868
		mov    -0x1a(%ebp),%edx
		test   %edx,%edx
		jge    jump_e77ce
		mov    $0x1,%al
		lea    0x7e(%ebp),%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4
	jump_e77ce:
		mov    -0x22(%ebp),%eax
		mov    -0x1a(%ebp),%ecx
		sub    %ecx,%eax
		mov    %eax,0x32(%ebp)
		mov    -0x22(%ebp),%eax
		mov    %eax,0x36(%ebp)
		mov    -0x26(%ebp),%eax
		mov    -0x1e(%ebp),%esi
		sub    %esi,%eax
		mov    %eax,0x3a(%ebp)
		mov    0x3a(%ebp),%edx
		mov    0x36(%ebp),%edi
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x32(%ebp),%ecx
		idiv   %ecx
		mov    %eax,0x3a(%ebp)
		xor    %esi,%esi
		mov    %esi,-0x22(%ebp)
		mov    0x3a(%ebp),%eax
		sub    %eax,-0x26(%ebp)
		movb   $0x1,0x7a(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edx # lbDisplay.GraphicsWindowHeight
		cmp    %edx,%eax
		jl     jump_e79b0
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%ecx
		sub    %ecx,%eax
		mov    %eax,0x3e(%ebp)
		mov    -0x1a(%ebp),%eax
		sub    %ebx,%eax
		mov    %eax,0x42(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%esi
		sub    %esi,%eax
		mov    %eax,0x46(%ebp)
		mov    0x46(%ebp),%edx
		mov    0x42(%ebp),%edi
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x3e(%ebp),%ebx
		idiv   %ebx
		mov    %eax,0x46(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+52,%eax # lbDisplay.GraphicsWindowHeight
		dec    %eax
		mov    %eax,-0x1a(%ebp)
		mov    0x46(%ebp),%eax
		sub    %eax,-0x1e(%ebp)
		jmp    jump_e79b0
	jump_e7868:
		mov    -0x22(%ebp),%eax
		mov    EXPORT_SYMBOL(lbDisplay)+52,%esi # lbDisplay.GraphicsWindowHeight
		cmp    %esi,%eax
		jl     jump_e791f
		mov    -0x1a(%ebp),%eax
		cmp    %esi,%eax
		jl     jump_e788b
		mov    $0x1,%al
		lea    0x7e(%ebp),%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4
	jump_e788b:
		mov    -0x22(%ebp),%eax
		mov    -0x1a(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,0x4a(%ebp)
		mov    -0x22(%ebp),%eax
		sub    %ebx,%eax
		mov    %eax,0x4e(%ebp)
		mov    -0x26(%ebp),%eax
		mov    -0x1e(%ebp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x52(%ebp)
		mov    0x52(%ebp),%edx
		mov    0x4e(%ebp),%ecx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x4a(%ebp),%esi
		idiv   %esi
		mov    %eax,0x52(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+52,%eax # lbDisplay.GraphicsWindowHeight
		dec    %eax
		mov    %eax,-0x22(%ebp)
		mov    0x52(%ebp),%eax
		sub    %eax,-0x26(%ebp)
		movb   $0x1,0x7a(%ebp)
		mov    -0x1a(%ebp),%eax
		test   %eax,%eax
		jge    jump_e79b0
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,0x56(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    %eax,0x5a(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x5e(%ebp)
		mov    0x5e(%ebp),%edx
		mov    0x5a(%ebp),%ecx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x56(%ebp),%esi
		idiv   %esi
		mov    %eax,0x5e(%ebp)
		xor    %edi,%edi
		mov    %edi,-0x1a(%ebp)
		mov    0x5e(%ebp),%eax
		sub    %eax,-0x1e(%ebp)
		jmp    jump_e79b0
	jump_e791f:
		mov    -0x1a(%ebp),%ecx
		test   %ecx,%ecx
		jge    jump_e7962
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%esi
		sub    %esi,%eax
		mov    %eax,0x62(%ebp)
		mov    -0x1a(%ebp),%eax
		mov    %eax,0x66(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%edi
		sub    %edi,%eax
		mov    %eax,0x6a(%ebp)
		mov    0x6a(%ebp),%edx
		mov    0x66(%ebp),%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x62(%ebp),%ebx
		idiv   %ebx
		mov    %eax,0x6a(%ebp)
		xor    %ecx,%ecx
		mov    %ecx,-0x1a(%ebp)
		mov    0x6a(%ebp),%eax
		jmp    jump_e79a9
	jump_e7962:
		mov    -0x1a(%ebp),%eax
		cmp    %esi,%eax
		jl     jump_e79b0
		mov    -0x1a(%ebp),%eax
		mov    -0x22(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,0x6e(%ebp)
		mov    -0x1a(%ebp),%eax
		sub    %ebx,%eax
		mov    %eax,0x72(%ebp)
		mov    -0x1e(%ebp),%eax
		mov    -0x26(%ebp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x76(%ebp)
		mov    0x76(%ebp),%edx
		mov    0x72(%ebp),%ecx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    0x6e(%ebp),%esi
		idiv   %esi
		mov    %eax,0x76(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+52,%eax # lbDisplay.GraphicsWindowHeight
		dec    %eax
		mov    %eax,-0x1a(%ebp)
		mov    0x76(%ebp),%eax
	jump_e79a9:
		sub    %eax,-0x1e(%ebp)
		movb   $0x1,0x7a(%ebp)
	jump_e79b0:
		xor    %eax,%eax
		mov    0x8e(%ebp),%al
		mov    -0x1a(%ebp),%ecx
		mov    -0x1e(%ebp),%ebx
		mov    -0x22(%ebp),%edx
		push   %eax
		mov    -0x26(%ebp),%eax
		call   ac_draw_b_line
		mov    0x7a(%ebp),%al
	jump_e79cd:
		lea    0x7e(%ebp),%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
GLOBAL_FUNC (ASM_draw_b_line)	/* 0x0E79D8 */
/*----------------------------------------------------------------*/
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x3c,%esp
		mov    %eax,-0x3c(%ebp)
		mov    %edx,-0x38(%ebp)
		mov    %ebx,-0x34(%ebp)
		mov    %ecx,-0x30(%ebp)
		mov    -0x34(%ebp),%eax
		mov    -0x3c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x10(%ebp)
		mov    -0x10(%ebp),%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,-0x20(%ebp)
		cmpl   $0x0,-0x10(%ebp)
		jle    jump_e7a10
		mov    $0x1,%eax
		jmp    jump_e7a15
	jump_e7a10:
		mov    $0xffffffff,%eax
	jump_e7a15:
		mov    %eax,-0x18(%ebp)
		mov    -0x30(%ebp),%eax
		mov    -0x38(%ebp),%ecx
		sub    %ecx,%eax
		mov    %eax,-0xc(%ebp)
		mov    -0xc(%ebp),%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,-0x1c(%ebp)
		cmpl   $0x0,-0xc(%ebp)
		jle    jump_e7a3d
		mov    $0x1,%eax
		jmp    jump_e7a42
	jump_e7a3d:
		mov    $0xffffffff,%eax
	jump_e7a42:
		mov    %eax,-0x14(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+32,%eax # lbDisplay.GraphicsScreenWidth
		mov    -0x14(%ebp),%edi
		imul   %edi,%eax
		mov    %eax,-0x8(%ebp)
		mov    -0x38(%ebp),%eax
		imul   EXPORT_SYMBOL(lbDisplay)+32,%eax # lbDisplay.GraphicsScreenWidth
		mov    -0x3c(%ebp),%edx
		add    %eax,%edx
		mov    %edx,-0x4(%ebp)
		mov    -0x3c(%ebp),%eax
		mov    %eax,-0x28(%ebp)
		mov    -0x38(%ebp),%eax
		mov    %eax,-0x24(%ebp)
		testb  $0x4,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_e7b5a
		mov    -0x20(%ebp),%eax
		mov    -0x1c(%ebp),%ebx
		cmp    %ebx,%eax
		jle    jump_e7af1
		mov    -0x20(%ebp),%eax
		sar    %eax
		mov    -0x1c(%ebp),%edx
		sub    %eax,%edx
		mov    %edx,-0x2c(%ebp)
	jump_e7a95:
		mov    EXPORT_SYMBOL(lbDisplay)+16,%eax # lbDisplay.GraphicsWindowPtr
		mov    -0x4(%ebp),%edx
		xor    %ebx,%ebx
		mov    (%edx,%eax,1),%bl
		xor    %edx,%edx
		mov    0xc(%ebp),%dl
		shl    $0x8,%edx
		add    %ebx,%edx
		mov    EXPORT_SYMBOL(lbDisplay)+8,%ebx # lbDisplay.GlassMap
		add    %ebx,%edx
		mov    -0x4(%ebp),%ebx
		add    %eax,%ebx
		mov    (%edx),%al
		mov    %al,(%ebx)
		mov    -0x28(%ebp),%eax
		mov    -0x34(%ebp),%ecx
		cmp    %ecx,%eax
		je     jump_e7cf0
		cmpl   $0x0,-0x2c(%ebp)
		jl     jump_e7add
		mov    -0x8(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x20(%ebp),%eax
		sub    %eax,-0x2c(%ebp)
	jump_e7add:
		mov    -0x18(%ebp),%eax
		add    %eax,-0x28(%ebp)
		mov    -0x18(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x1c(%ebp),%eax
		add    %eax,-0x2c(%ebp)
		jmp    jump_e7a95
	jump_e7af1:
		mov    -0x1c(%ebp),%eax
		sar    %eax
		mov    -0x20(%ebp),%edx
		sub    %eax,%edx
		mov    %edx,-0x2c(%ebp)
	jump_e7afe:
		mov    EXPORT_SYMBOL(lbDisplay)+16,%eax # lbDisplay.GraphicsWindowPtr
		mov    -0x4(%ebp),%edx
		xor    %ebx,%ebx
		mov    (%edx,%eax,1),%bl
		xor    %edx,%edx
		mov    0xc(%ebp),%dl
		shl    $0x8,%edx
		add    %ebx,%edx
		mov    EXPORT_SYMBOL(lbDisplay)+8,%ebx # lbDisplay.GlassMap
		add    %ebx,%edx
		mov    -0x4(%ebp),%ebx
		add    %eax,%ebx
		mov    (%edx),%al
		mov    %al,(%ebx)
		mov    -0x24(%ebp),%eax
		mov    -0x30(%ebp),%edi
		cmp    %edi,%eax
		je     jump_e7cf0
		cmpl   $0x0,-0x2c(%ebp)
		jl     jump_e7b46
		mov    -0x18(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x1c(%ebp),%eax
		sub    %eax,-0x2c(%ebp)
	jump_e7b46:
		mov    -0x14(%ebp),%eax
		add    %eax,-0x24(%ebp)
		mov    -0x8(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x20(%ebp),%eax
		add    %eax,-0x2c(%ebp)
		jmp    jump_e7afe
	jump_e7b5a:
		mov    EXPORT_SYMBOL(lbDisplay)+96,%dl # lbDisplay__DrawFlags
		test   $0x8,%dl
		je     jump_e7c4b
		mov    -0x20(%ebp),%eax
		mov    -0x1c(%ebp),%edx
		cmp    %edx,%eax
		jle    jump_e7be0
		mov    -0x20(%ebp),%eax
		sar    %eax
		mov    -0x1c(%ebp),%edx
		sub    %eax,%edx
		mov    %edx,-0x2c(%ebp)
	jump_e7b80:
		mov    EXPORT_SYMBOL(lbDisplay)+16,%eax # lbDisplay.GraphicsWindowPtr
		mov    -0x4(%ebp),%edx
		mov    (%edx,%eax,1),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		xor    %edx,%edx
		shl    $0x8,%ebx
		mov    0xc(%ebp),%dl
		add    %ebx,%edx
		mov    EXPORT_SYMBOL(lbDisplay)+8,%ebx # lbDisplay.GlassMap
		add    %ebx,%edx
		mov    -0x4(%ebp),%ebx
		add    %eax,%ebx
		mov    (%edx),%al
		mov    %al,(%ebx)
		mov    -0x28(%ebp),%eax
		cmp    -0x34(%ebp),%eax
		je     jump_e7cf0
		cmpl   $0x0,-0x2c(%ebp)
		jl     jump_e7bcc
		mov    -0x8(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x20(%ebp),%eax
		sub    %eax,-0x2c(%ebp)
	jump_e7bcc:
		mov    -0x18(%ebp),%eax
		add    %eax,-0x28(%ebp)
		mov    -0x18(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x1c(%ebp),%eax
		add    %eax,-0x2c(%ebp)
		jmp    jump_e7b80
	jump_e7be0:
		mov    -0x1c(%ebp),%eax
		sar    %eax
		mov    -0x20(%ebp),%edx
		sub    %eax,%edx
		mov    %edx,-0x2c(%ebp)
	jump_e7bed:
		mov    EXPORT_SYMBOL(lbDisplay)+16,%eax # lbDisplay.GraphicsWindowPtr
		mov    -0x4(%ebp),%edx
		mov    (%edx,%eax,1),%dl
		and    $0xff,%edx
		xor    %ebx,%ebx
		shl    $0x8,%edx
		mov    0xc(%ebp),%bl
		add    %ebx,%edx
		mov    EXPORT_SYMBOL(lbDisplay)+8,%ebx # lbDisplay.GlassMap
		add    %ebx,%edx
		mov    -0x4(%ebp),%ebx
		add    %eax,%ebx
		mov    (%edx),%al
		mov    %al,(%ebx)
		mov    -0x24(%ebp),%eax
		cmp    -0x30(%ebp),%eax
		je     jump_e7cf0
		cmpl   $0x0,-0x2c(%ebp)
		jl     jump_e7c37
		mov    -0x18(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x1c(%ebp),%eax
		sub    %eax,-0x2c(%ebp)
	jump_e7c37:
		mov    -0x14(%ebp),%eax
		add    %eax,-0x24(%ebp)
		mov    -0x8(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x20(%ebp),%eax
		add    %eax,-0x2c(%ebp)
		jmp    jump_e7bed
	jump_e7c4b:
		mov    -0x20(%ebp),%eax
		mov    -0x1c(%ebp),%edx
		cmp    %edx,%eax
		jle    jump_e7ca5
		mov    -0x20(%ebp),%eax
		sar    %eax
		mov    -0x1c(%ebp),%edx
		sub    %eax,%edx
		mov    %edx,-0x2c(%ebp)
	jump_e7c62:
		mov    EXPORT_SYMBOL(lbDisplay)+16,%eax # lbDisplay.GraphicsWindowPtr
		mov    -0x4(%ebp),%edx
		add    %eax,%edx
		mov    0xc(%ebp),%al
		mov    %al,(%edx)
		mov    -0x28(%ebp),%eax
		mov    -0x34(%ebp),%ebx
		cmp    %ebx,%eax
		je     jump_e7cf0
		cmpl   $0x0,-0x2c(%ebp)
		jl     jump_e7c91
		mov    -0x8(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x20(%ebp),%eax
		sub    %eax,-0x2c(%ebp)
	jump_e7c91:
		mov    -0x18(%ebp),%eax
		add    %eax,-0x28(%ebp)
		mov    -0x18(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x1c(%ebp),%eax
		add    %eax,-0x2c(%ebp)
		jmp    jump_e7c62
	jump_e7ca5:
		mov    -0x1c(%ebp),%eax
		sar    %eax
		mov    -0x20(%ebp),%edx
		sub    %eax,%edx
		mov    %edx,-0x2c(%ebp)
	jump_e7cb2:
		mov    EXPORT_SYMBOL(lbDisplay)+16,%edx # lbDisplay.GraphicsWindowPtr
		add    -0x4(%ebp),%edx
		mov    0xc(%ebp),%al
		mov    %al,(%edx)
		mov    -0x24(%ebp),%eax
		mov    -0x30(%ebp),%edi
		cmp    %edi,%eax
		je     jump_e7cf0
		cmpl   $0x0,-0x2c(%ebp)
		jl     jump_e7cdc
		mov    -0x18(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x1c(%ebp),%eax
		sub    %eax,-0x2c(%ebp)
	jump_e7cdc:
		mov    -0x14(%ebp),%eax
		add    %eax,-0x24(%ebp)
		mov    -0x8(%ebp),%eax
		add    %eax,-0x4(%ebp)
		mov    -0x20(%ebp),%eax
		add    %eax,-0x2c(%ebp)
		jmp    jump_e7cb2
	jump_e7cf0:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		ret    $0x4


/*----------------------------------------------------------------*/
GLOBAL_FUNC (ASM_LbDrawHVLine)	/* 0xf0834 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff0,%esp
		push   %eax
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %esi
		mov    %eax,-0x4(%ebp)
		mov    %edx,-0x8(%ebp)
		mov    %ebx,-0xc(%ebp)
		mov    %ecx,-0x10(%ebp)
		mov    EXPORT_SYMBOL(lbDisplay)+48,%eax # lbDisplay.GraphicsWindowWidth
		dec    %eax
		mov    EXPORT_SYMBOL(lbDisplay)+52,%ebx # lbDisplay.GraphicsWindowHeight
		dec    %ebx
		mov    -0x4(%ebp),%edi
		mov    -0xc(%ebp),%esi
		cmp    %esi,%edi
		jg     jump_f0895
		cmp    $0x0,%esi
		jge    jump_f0872
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f0872:
		cmp    %eax,%edi
		jle    jump_f0880
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f0880:
		cmp    $0x0,%edi
		jge    jump_f088c
		movl   $0x0,-0x4(%ebp)
	jump_f088c:
		cmp    %eax,%esi
		jle    jump_f08c8
		mov    %eax,-0xc(%ebp)
		jmp    jump_f08c8
	jump_f0895:
		cmp    $0x0,%edi
		jge    jump_f08a4
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f08a4:
		cmp    %eax,%esi
		jle    jump_f08b2
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f08b2:
		cmp    $0x0,%esi
		jge    jump_f08bc
		mov    $0x0,%esi
	jump_f08bc:
		cmp    %eax,%edi
		jle    jump_f08c2
		mov    %eax,%edi
	jump_f08c2:
		mov    %esi,-0x4(%ebp)
		mov    %edi,-0xc(%ebp)
	jump_f08c8:
		mov    -0x8(%ebp),%edi
		mov    -0x10(%ebp),%esi
		cmp    %esi,%edi
		jg     jump_f0904
		cmp    $0x0,%esi
		jge    jump_f08e1
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f08e1:
		cmp    %ebx,%edi
		jle    jump_f08ef
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f08ef:
		cmp    $0x0,%edi
		jge    jump_f08fb
		movl   $0x0,-0x8(%ebp)
	jump_f08fb:
		cmp    %ebx,%esi
		jle    jump_f0937
		mov    %ebx,-0x10(%ebp)
		jmp    jump_f0937
	jump_f0904:
		cmp    $0x0,%edi
		jge    jump_f0913
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f0913:
		cmp    %ebx,%esi
		jle    jump_f0921
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4
	jump_f0921:
		cmp    $0x0,%esi
		jge    jump_f092b
		mov    $0x0,%esi
	jump_f092b:
		cmp    %ebx,%edi
		jle    jump_f0931
		mov    %ebx,%edi
	jump_f0931:
		mov    %esi,-0x8(%ebp)
		mov    %edi,-0x10(%ebp)
	jump_f0937:
		mov    -0x8(%ebp),%edi
		imul   EXPORT_SYMBOL(lbDisplay)+32,%edi # lbDisplay.GraphicsScreenWidth
		add    -0x4(%ebp),%edi
		add    EXPORT_SYMBOL(lbDisplay)+16,%edi # lbDisplay.GraphicsWindowPtr
		mov    -0xc(%ebp),%ecx
		sub    -0x4(%ebp),%ecx
		jne    jump_f09bb
		mov    -0x10(%ebp),%ecx
		sub    -0x8(%ebp),%ecx
		inc    %ecx
		testw  $0x4,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_f0985
		mov    EXPORT_SYMBOL(lbDisplay)+8,%esi # lbDisplay.GlassMap
		movzbl 0x8(%ebp),%eax
		shl    $0x8,%eax
	jump_f0971:
		mov    (%edi),%al
		mov    (%eax,%esi,1),%bl
		mov    %bl,(%edi)
		add    EXPORT_SYMBOL(lbDisplay)+32,%edi # lbDisplay.GraphicsScreenWidth
		loop   jump_f0971
		jmp    jump_f0a0b
	jump_f0985:
		testw  $0x8,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_f09ab
		mov    EXPORT_SYMBOL(lbDisplay)+8,%esi # lbDisplay.GlassMap
		movzbl 0x8(%ebp),%eax
	jump_f099a:
		mov    (%edi),%ah
		mov    (%eax,%esi,1),%bl
		mov    %bl,(%edi)
		add    EXPORT_SYMBOL(lbDisplay)+32,%edi # lbDisplay.GraphicsScreenWidth
		loop   jump_f099a
		jmp    jump_f0a0b
	jump_f09ab:
		movzbl 0x8(%ebp),%eax
	jump_f09af:
		mov    %al,(%edi)
		add    EXPORT_SYMBOL(lbDisplay)+32,%edi # lbDisplay.GraphicsScreenWidth
		loop   jump_f09af
		jmp    jump_f0a0b
	jump_f09bb:
		inc    %ecx
		testw  $0x4,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_f09e2
		mov    EXPORT_SYMBOL(lbDisplay)+8,%esi # lbDisplay.GlassMap
		movzbl 0x8(%ebp),%eax
		shl    $0x8,%eax
	jump_f09d4:
		mov    (%edi),%al
		mov    (%eax,%esi,1),%bl
		mov    %bl,(%edi)
		add    $0x1,%edi
		loop   jump_f09d4
		jmp    jump_f0a0b
	jump_f09e2:
		testw  $0x8,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_f0a05
		mov    EXPORT_SYMBOL(lbDisplay)+8,%esi # lbDisplay.GlassMap
		movzbl 0x8(%ebp),%eax
	jump_f09f7:
		mov    (%edi),%ah
		mov    (%eax,%esi,1),%bl
		mov    %bl,(%edi)
		add    $0x1,%edi
		loop   jump_f09f7
		jmp    jump_f0a0b
	jump_f0a05:
		movzbl 0x8(%ebp),%eax
		rep stos %al,%es:(%edi)
	jump_f0a0b:
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
LbDrawBoxClip_:	/* 0x0FADD0 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff0,%esp
		push   %eax
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %esi
		mov    %eax,-0x4(%ebp)
		mov    %edx,-0x8(%ebp)
		mov    %ebx,-0xc(%ebp)
		mov    %ecx,-0x10(%ebp)
		mov    -0x8(%ebp),%edi
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		jge    jump_faee2
		cmp    $0x0,%edi
		jge    jump_fae01
		add    %edi,-0x10(%ebp)
		xor    %edi,%edi
	jump_fae01:
		mov    %edi,%edx
		add    -0x10(%ebp),%edx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%edx # lbDisplay.GraphicsWindowHeight
		jle    jump_fae17
		sub    EXPORT_SYMBOL(lbDisplay)+52,%edx # lbDisplay.GraphicsWindowHeight
		sub    %edx,-0x10(%ebp)
	jump_fae17:
		cmpl   $0x0,-0x10(%ebp)
		jle    jump_faee2
		add    EXPORT_SYMBOL(lbDisplay)+44,%edi # lbDisplay.GraphicsWindowY
		imul   EXPORT_SYMBOL(lbDisplay)+32,%edi # lbDisplay.GraphicsScreenWidth
		mov    -0x4(%ebp),%eax
		cmp    EXPORT_SYMBOL(lbDisplay)+48,%eax # lbDisplay.GraphicsWindowWidth
		jge    jump_faee2
		cmp    $0x0,%eax
		jge    jump_fae47
		add    %eax,-0xc(%ebp)
		xor    %eax,%eax
	jump_fae47:
		mov    %eax,%edx
		add    -0xc(%ebp),%edx
		cmp    EXPORT_SYMBOL(lbDisplay)+48,%edx # lbDisplay.GraphicsWindowWidth
		jle    jump_fae5d
		sub    EXPORT_SYMBOL(lbDisplay)+48,%edx # lbDisplay.GraphicsWindowWidth
		sub    %edx,-0xc(%ebp)
	jump_fae5d:
		cmpl   $0x0,-0xc(%ebp)
		jle    jump_faee2
		add    %eax,%edi
		add    EXPORT_SYMBOL(lbDisplay)+40,%edi # lbDisplay.GraphicsWindowX
		add    EXPORT_SYMBOL(lbDisplay)+4,%edi # lbDisplay.WScreen
		mov    -0x10(%ebp),%edx
		mov    EXPORT_SYMBOL(lbDisplay)+32,%ebx # lbDisplay.GraphicsScreenWidth
		sub    -0xc(%ebp),%ebx
		testw  $0x4,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_faea8
		mov    EXPORT_SYMBOL(lbDisplay)+8,%esi # lbDisplay.GlassMap
		movzbl 0x8(%ebp),%eax
		shl    $0x8,%eax
	jump_fae95:
		mov    -0xc(%ebp),%ecx
	jump_fae98:
		mov    (%edi),%al
		mov    (%eax,%esi,1),%al
		stos   %al,%es:(%edi)
		dec    %ecx
		jne    jump_fae98
		add    %ebx,%edi
		dec    %edx
		jne    jump_fae95
		jmp    jump_faee2
	jump_faea8:
		testw  $0x8,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_faed3
		mov    EXPORT_SYMBOL(lbDisplay)+8,%esi # lbDisplay.GlassMap
		movzbl 0x8(%ebp),%eax
	jump_faebd:
		mov    -0xc(%ebp),%ecx
	jump_faec0:
		mov    0x8(%ebp),%al
		mov    (%edi),%ah
		mov    (%eax,%esi,1),%al
		stos   %al,%es:(%edi)
		dec    %ecx
		jne    jump_faec0
		add    %ebx,%edi
		dec    %edx
		jne    jump_faebd
		jmp    jump_faee2
	jump_faed3:
		mov    0x8(%ebp),%al
	jump_faed6:
		mov    -0xc(%ebp),%ecx
	jump_faed9:
		stos   %al,%es:(%edi)
		dec    %ecx
		jne    jump_faed9
		add    %ebx,%edi
		dec    %edx
		jne    jump_faed6
	jump_faee2:
		pop    %esi
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
GLOBAL_FUNC (ASM_LbDrawTriangleFilled)
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xffffffb4,%esp
		push   %eax
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,-0x4(%ebp)
		mov    %edx,-0x8(%ebp)
		mov    %ebx,-0xc(%ebp)
		mov    %ecx,-0x10(%ebp)
		lea    -0x14(%ebp),%esi
		lea    -0x18(%ebp),%edi
		lea    -0x1c(%ebp),%ecx
		mov    -0x4(%ebp),%eax
		mov    %ax,(%esi)
		mov    -0xc(%ebp),%eax
		mov    %ax,(%edi)
		mov    0x8(%ebp),%eax
		mov    %ax,(%ecx)
		mov    -0x8(%ebp),%eax
		mov    %ax,0x2(%esi)
		mov    -0x10(%ebp),%ebx
		mov    %bx,0x2(%edi)
		mov    0xc(%ebp),%edx
		mov    %dx,0x2(%ecx)
		mov    0x2(%esi),%ax
		mov    0x2(%edi),%bx
		mov    0x2(%ecx),%dx
		cmp    %bx,%ax
		je     jump_138959
		jg     jump_13891b
		cmp    %dx,%ax
		je     jump_138944
		js     jump_13899b
		xchg   %esi,%ecx
		xchg   %edi,%ecx
		jmp    jump_1389a6
	jump_13891b:
		cmp    %dx,%ax
		je     jump_138d51
		js     jump_138b79
		cmp    %dx,%bx
		je     jump_138e56
		js     jump_13893e
		xchg   %esi,%ecx
		xchg   %edi,%ecx
		jmp    jump_138b7d
	jump_13893e:
		xchg   %esi,%edi
		xchg   %edi,%ecx
		jmp    jump_1389a6
	jump_138944:
		mov    (%esi),%ax
		cmp    (%ecx),%ax
		jle    jump_139010
		xchg   %esi,%ecx
		xchg   %edi,%ecx
		jmp    jump_138e66
	jump_138959:
		cmp    %dx,%ax
		je     jump_139010
		js     jump_138979
		mov    (%esi),%ax
		cmp    (%edi),%ax
		jle    jump_139010
		xchg   %esi,%ecx
		xchg   %edi,%ecx
		jmp    jump_138d61
	jump_138979:
		mov    (%edi),%ax
		cmp    (%esi),%ax
		jle    jump_139010
		jmp    jump_138e66
	jump_13898a:
		mov    (%edi),%ax
		cmp    (%ecx),%ax
		jle    jump_139010
		jmp    jump_138d61
	jump_13899b:
		cmp    %dx,%bx
		je     jump_13898a
		jg     jump_138b7d
	jump_1389a6:
		mov    0x2(%esi),%ax
		mov    %ax,-0x46(%ebp)
		or     %ax,%ax
		jns    jump_1389c2
		mov    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x1,-0x47(%ebp)
		jmp    jump_1389e6
	jump_1389c2:
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%ax # lbDisplay.GraphicsWindowHeight
		jge    jump_139010
		movzwl %ax,%ebx
		imul   EXPORT_SYMBOL(lbDisplay)+32,%ebx # lbDisplay.GraphicsScreenWidth
		add    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x0,-0x47(%ebp)
	jump_1389e6:
		movzwl 0x2(%ecx),%ebx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%bx # lbDisplay.GraphicsWindowHeight
		setg   -0x49(%ebp)
		sub    %ax,%bx
		mov    %ebx,-0x30(%ebp)
		mov    %ebx,-0x40(%ebp)
		mov    0x2(%edi),%bx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%bx # lbDisplay.GraphicsWindowHeight
		setg   -0x48(%ebp)
		sub    %ax,%bx
		mov    %ebx,-0x34(%ebp)
		mov    (%ecx),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idivl  -0x30(%ebp)
		mov    %eax,-0x24(%ebp)
		mov    (%edi),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idivl  -0x34(%ebp)
		cmp    -0x24(%ebp),%eax
		jle    jump_139010
		mov    %eax,-0x28(%ebp)
		movzwl 0x2(%ecx),%ebx
		sub    0x2(%edi),%bx
		mov    (%ecx),%ax
		sub    (%edi),%ax
		shl    $0x10,%eax
		cltd
		idiv   %ebx
		mov    %eax,-0x2c(%ebp)
		mov    %ebx,-0x38(%ebp)
		mov    (%edi),%ax
		shl    $0x10,%eax
		mov    %eax,-0x3c(%ebp)
		mov    (%esi),%ax
		shl    $0x10,%eax
		mov    %eax,%ebx
		cmpb   $0x0,-0x47(%ebp)
		je     jump_138b0d
		movswl -0x46(%ebp),%edi
		neg    %edi
		sub    %edi,-0x40(%ebp)
		jle    jump_139010
		mov    %edi,-0x44(%ebp)
		cmp    -0x34(%ebp),%di
		js     jump_138ace
		mov    -0x24(%ebp),%edi
		imul   -0x34(%ebp),%edi
		add    %edi,%eax
		mov    -0x3c(%ebp),%ebx
		mov    -0x44(%ebp),%edi
		sub    -0x34(%ebp),%edi
		sub    %di,-0x38(%ebp)
		mov    %edi,-0x44(%ebp)
		imul   -0x24(%ebp),%edi
		add    %edi,%eax
		mov    -0x44(%ebp),%edi
		imul   -0x2c(%ebp),%edi
		add    %edi,%ebx
		cmpb   $0x0,-0x49(%ebp)
		je     jump_138ac3
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		mov    %edi,-0x38(%ebp)
		mov    %edi,-0x40(%ebp)
	jump_138ac3:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%edi
		jmp    jump_138b55
	jump_138ace:
		mov    -0x44(%ebp),%edi
		sub    %di,-0x34(%ebp)
		imul   -0x24(%ebp),%edi
		add    %edi,%eax
		mov    -0x28(%ebp),%edi
		imul   -0x44(%ebp),%edi
		add    %edi,%ebx
		cmpb   $0x0,-0x49(%ebp)
		je     jump_138b38
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		mov    %edi,-0x40(%ebp)
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138aff
		mov    %di,-0x34(%ebp)
		jmp    jump_138b0b
	jump_138aff:
		sub    -0x34(%ebp),%di
		setle  -0x48(%ebp)
		mov    %di,-0x38(%ebp)
	jump_138b0b:
		jmp    jump_138b38
	jump_138b0d:
		cmpb   $0x0,-0x49(%ebp)
		je     jump_138b38
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		sub    -0x46(%ebp),%di
		mov    %edi,-0x40(%ebp)
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138b2c
		mov    %di,-0x34(%ebp)
		jmp    jump_138b38
	jump_138b2c:
		sub    -0x34(%ebp),%di
		setle  -0x48(%ebp)
		mov    %di,-0x38(%ebp)
	jump_138b38:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%edi
	jump_138b3e:
		mov    %eax,(%edi)
		add    -0x24(%ebp),%eax
		mov    %ebx,0x4(%edi)
		add    -0x28(%ebp),%ebx
		add    $0x8,%edi
		decw   -0x34(%ebp)
		jne    jump_138b3e
		mov    -0x3c(%ebp),%ebx
	jump_138b55:
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138b60
		jmp    jump_138f5a
	jump_138b60:
		mov    %eax,(%edi)
		add    -0x24(%ebp),%eax
		mov    %ebx,0x4(%edi)
		add    -0x2c(%ebp),%ebx
		add    $0x8,%edi
		decw   -0x38(%ebp)
		jne    jump_138b60
		jmp    jump_138f5a
	jump_138b79:
		xchg   %esi,%edi
		xchg   %edi,%ecx
	jump_138b7d:
		mov    0x2(%esi),%ax
		mov    %ax,-0x46(%ebp)
		or     %ax,%ax
		jns    jump_138b99
		mov    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x1,-0x47(%ebp)
		jmp    jump_138bbd
	jump_138b99:
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%ax # lbDisplay.GraphicsWindowHeight
		jge    jump_139010
		movzwl %ax,%ebx
		imul   EXPORT_SYMBOL(lbDisplay)+32,%ebx # lbDisplay.GraphicsScreenWidth
		add    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x0,-0x47(%ebp)
	jump_138bbd:
		movzwl 0x2(%ecx),%ebx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%bx # lbDisplay.GraphicsWindowHeight
		setg   -0x48(%ebp)
		sub    %ax,%bx
		mov    %ebx,-0x30(%ebp)
		mov    0x2(%edi),%bx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%bx # lbDisplay.GraphicsWindowHeight
		setg   -0x49(%ebp)
		sub    %ax,%bx
		mov    %ebx,-0x34(%ebp)
		mov    %ebx,-0x40(%ebp)
		mov    (%ecx),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idivl  -0x30(%ebp)
		mov    %eax,-0x24(%ebp)
		mov    (%edi),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idivl  -0x34(%ebp)
		cmp    -0x24(%ebp),%eax
		jle    jump_139010
		mov    %eax,-0x28(%ebp)
		movzwl 0x2(%edi),%ebx
		sub    0x2(%ecx),%bx
		mov    (%edi),%ax
		sub    (%ecx),%ax
		shl    $0x10,%eax
		cltd
		idiv   %ebx
		mov    %eax,-0x2c(%ebp)
		mov    %ebx,-0x38(%ebp)
		mov    (%ecx),%ax
		shl    $0x10,%eax
		mov    %eax,-0x3c(%ebp)
		mov    (%esi),%ax
		shl    $0x10,%eax
		mov    %eax,%ebx
		cmpb   $0x0,-0x47(%ebp)
		je     jump_138ce5
		movswl -0x46(%ebp),%edi
		neg    %edi
		sub    %edi,-0x40(%ebp)
		jle    jump_139010
		mov    %edi,-0x44(%ebp)
		cmp    -0x30(%ebp),%di
		js     jump_138ca6
		mov    -0x28(%ebp),%edi
		imul   -0x30(%ebp),%edi
		add    %edi,%ebx
		mov    -0x3c(%ebp),%eax
		mov    -0x44(%ebp),%edi
		sub    -0x30(%ebp),%edi
		mov    %edi,-0x44(%ebp)
		sub    %di,-0x38(%ebp)
		imul   -0x2c(%ebp),%edi
		add    %edi,%eax
		mov    -0x28(%ebp),%edi
		imul   -0x44(%ebp),%edi
		add    %edi,%ebx
		cmpb   $0x0,-0x49(%ebp)
		je     jump_138c9b
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		mov    %di,-0x38(%ebp)
		mov    %edi,-0x40(%ebp)
	jump_138c9b:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%edi
		jmp    jump_138d2d
	jump_138ca6:
		mov    -0x44(%ebp),%edi
		sub    %di,-0x30(%ebp)
		imul   -0x24(%ebp),%edi
		add    %edi,%eax
		mov    -0x28(%ebp),%edi
		imul   -0x44(%ebp),%edi
		add    %edi,%ebx
		cmpb   $0x0,-0x49(%ebp)
		je     jump_138d10
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		mov    %edi,-0x40(%ebp)
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138cd7
		mov    %di,-0x30(%ebp)
		jmp    jump_138ce3
	jump_138cd7:
		sub    -0x30(%ebp),%di
		setle  -0x48(%ebp)
		mov    %di,-0x38(%ebp)
	jump_138ce3:
		jmp    jump_138d10
	jump_138ce5:
		cmpb   $0x0,-0x49(%ebp)
		je     jump_138d10
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		sub    -0x46(%ebp),%di
		mov    %edi,-0x40(%ebp)
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138d04
		mov    %di,-0x30(%ebp)
		jmp    jump_138d10
	jump_138d04:
		sub    -0x30(%ebp),%di
		setle  -0x48(%ebp)
		mov    %di,-0x38(%ebp)
	jump_138d10:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%edi
	jump_138d16:
		mov    %eax,(%edi)
		add    -0x24(%ebp),%eax
		mov    %ebx,0x4(%edi)
		add    -0x28(%ebp),%ebx
		add    $0x8,%edi
		decw   -0x30(%ebp)
		jne    jump_138d16
		mov    -0x3c(%ebp),%eax
	jump_138d2d:
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138d38
		jmp    jump_138f5a
	jump_138d38:
		mov    %eax,(%edi)
		add    -0x2c(%ebp),%eax
		mov    %ebx,0x4(%edi)
		add    -0x28(%ebp),%ebx
		add    $0x8,%edi
		decw   -0x38(%ebp)
		jne    jump_138d38
		jmp    jump_138f5a
	jump_138d51:
		mov    (%ecx),%ax
		cmp    (%esi),%ax
		jle    jump_139010
		xchg   %esi,%edi
		xchg   %edi,%ecx
	jump_138d61:
		mov    0x2(%esi),%ax
		mov    %ax,-0x46(%ebp)
		or     %ax,%ax
		jns    jump_138d7d
		mov    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x1,-0x47(%ebp)
		jmp    jump_138da1
	jump_138d7d:
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%ax # lbDisplay.GraphicsWindowHeight
		jge    jump_139010
		movzwl %ax,%ebx
		imul   EXPORT_SYMBOL(lbDisplay)+32,%ebx # lbDisplay.GraphicsScreenWidth
		add    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x0,-0x47(%ebp)
	jump_138da1:
		movzwl 0x2(%ecx),%ebx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%bx # lbDisplay.GraphicsWindowHeight
		setg   -0x48(%ebp)
		sub    %ax,%bx
		mov    %ebx,-0x30(%ebp)
		mov    %ebx,-0x40(%ebp)
		mov    (%ecx),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idiv   %ebx
		mov    %eax,-0x24(%ebp)
		mov    (%edi),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idiv   %ebx
		mov    %eax,-0x28(%ebp)
		mov    (%esi),%ax
		shl    $0x10,%eax
		mov    %eax,%ebx
		cmpb   $0x0,-0x47(%ebp)
		je     jump_138e20
		movswl -0x46(%ebp),%edi
		neg    %edi
		sub    %di,-0x30(%ebp)
		sub    %di,-0x40(%ebp)
		jle    jump_139010
		mov    %edi,-0x44(%ebp)
		imul   -0x24(%ebp),%edi
		add    %edi,%eax
		mov    -0x28(%ebp),%edi
		imul   -0x44(%ebp),%edi
		add    %edi,%ebx
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138e37
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		mov    %edi,-0x40(%ebp)
		mov    %di,-0x30(%ebp)
		jmp    jump_138e37
	jump_138e20:
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138e37
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		sub    -0x46(%ebp),%di
		mov    %edi,-0x40(%ebp)
		mov    %di,-0x30(%ebp)
	jump_138e37:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%edi
	jump_138e3d:
		mov    %eax,(%edi)
		add    -0x24(%ebp),%eax
		mov    %ebx,0x4(%edi)
		add    -0x28(%ebp),%ebx
		add    $0x8,%edi
		decw   -0x30(%ebp)
		jne    jump_138e3d
		jmp    jump_138f5a
	jump_138e56:
		mov    (%ecx),%ax
		cmp    (%edi),%ax
		jle    jump_139010
		xchg   %esi,%edi
		xchg   %edi,%ecx
	jump_138e66:
		mov    0x2(%esi),%ax
		mov    %ax,-0x46(%ebp)
		or     %ax,%ax
		jns    jump_138e82
		mov    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x1,-0x47(%ebp)
		jmp    jump_138ea6
	jump_138e82:
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%ax # lbDisplay.GraphicsWindowHeight
		jge    jump_139010
		movzwl %ax,%ebx
		imul   EXPORT_SYMBOL(lbDisplay)+32,%ebx # lbDisplay.GraphicsScreenWidth
		add    EXPORT_SYMBOL(lbDisplay)+4,%ebx # lbDisplay.WScreen
		mov    %ebx,-0x20(%ebp)
		movb   $0x0,-0x47(%ebp)
	jump_138ea6:
		movzwl 0x2(%ecx),%ebx
		cmp    EXPORT_SYMBOL(lbDisplay)+52,%bx # lbDisplay.GraphicsWindowHeight
		setg   -0x48(%ebp)
		sub    %ax,%bx
		mov    %ebx,-0x30(%ebp)
		mov    %ebx,-0x40(%ebp)
		mov    (%ecx),%ax
		sub    (%esi),%ax
		shl    $0x10,%eax
		cltd
		idiv   %ebx
		mov    %eax,-0x24(%ebp)
		mov    (%ecx),%ax
		sub    (%edi),%ax
		shl    $0x10,%eax
		cltd
		idiv   %ebx
		mov    %eax,-0x28(%ebp)
		mov    (%esi),%ax
		shl    $0x10,%eax
		mov    (%edi),%bx
		shl    $0x10,%ebx
		cmpb   $0x0,-0x47(%ebp)
		je     jump_138f29
		movswl -0x46(%ebp),%edi
		neg    %edi
		sub    %di,-0x30(%ebp)
		sub    %di,-0x40(%ebp)
		jle    jump_139010
		mov    %edi,-0x44(%ebp)
		imul   -0x24(%ebp),%edi
		add    %edi,%eax
		mov    -0x28(%ebp),%edi
		imul   -0x44(%ebp),%edi
		add    %edi,%ebx
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138f40
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		mov    %edi,-0x40(%ebp)
		mov    %di,-0x30(%ebp)
		jmp    jump_138f40
	jump_138f29:
		cmpb   $0x0,-0x48(%ebp)
		je     jump_138f40
		mov    EXPORT_SYMBOL(lbDisplay)+52,%edi # lbDisplay.GraphicsWindowHeight
		sub    -0x46(%ebp),%di
		mov    %edi,-0x40(%ebp)
		mov    %di,-0x30(%ebp)
	jump_138f40:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%edi
	jump_138f46:
		mov    %eax,(%edi)
		add    -0x24(%ebp),%eax
		mov    %ebx,0x4(%edi)
		add    -0x28(%ebp),%ebx
		add    $0x8,%edi
		decw   -0x30(%ebp)
		jne    jump_138f46
	jump_138f5a:
		lea    EXPORT_SYMBOL(asm_draw_ranges),%esi
		mov    -0x20(%ebp),%edx
		mov    EXPORT_SYMBOL(lbDisplay)+44,%eax # lbDisplay.GraphicsWindowY
		dec    %eax
		imul   EXPORT_SYMBOL(lbDisplay)+32,%eax # lbDisplay.GraphicsScreenWidth
		add    EXPORT_SYMBOL(lbDisplay)+40,%eax # lbDisplay.GraphicsWindowX
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x10(%ebp),%al
		xor    %ecx,%ecx
	jump_138f7f:
		xor    %ebx,%ebx
		mov    0x2(%esi),%bx
		mov    0x6(%esi),%cx
		add    EXPORT_SYMBOL(lbDisplay)+32,%edx # lbDisplay.GraphicsScreenWidth
		or     %bx,%bx
		jns    jump_138fb3
		or     %cx,%cx
		jle    jump_139004
		cmp    EXPORT_SYMBOL(lbDisplay)+48,%cx # lbDisplay.GraphicsWindowWidth
		jle    jump_138fa9
		mov    EXPORT_SYMBOL(lbDisplay)+48,%cx # lbDisplay.GraphicsWindowWidth
	jump_138fa9:
		mov    %edx,%edi
		mov    EXPORT_SYMBOL(lbDisplay)+8,%ebx # lbDisplay.GlassMap
		jmp    jump_138fd1
	jump_138fb3:
		cmp    EXPORT_SYMBOL(lbDisplay)+48,%cx # lbDisplay.GraphicsWindowWidth
		jle    jump_138fc3
		mov    EXPORT_SYMBOL(lbDisplay)+48,%cx # lbDisplay.GraphicsWindowWidth
	jump_138fc3:
		sub    %bx,%cx
		jle    jump_139004
		lea    (%ebx,%edx,1),%edi
		mov    EXPORT_SYMBOL(lbDisplay)+8,%ebx # lbDisplay.GlassMap
	jump_138fd1:
		testw  $0x4,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_138fea
		mov    0x10(%ebp),%ah
	jump_138fdf:
		mov    (%edi),%al
		mov    (%eax,%ebx,1),%al
		stos   %al,%es:(%edi)
		dec    %ecx
		jne    jump_138fdf
		jmp    jump_139004
	jump_138fea:
		testw  $0x8,EXPORT_SYMBOL(lbDisplay)+96 # lbDisplay__DrawFlags
		je     jump_139002
	jump_138ff5:
		mov    (%edi),%ah
		mov    (%eax,%ebx,1),%ah
		mov    %ah,(%edi)
		inc    %edi
		dec    %ecx
		jne    jump_138ff5
		jmp    jump_139004
	jump_139002:
		rep stos %al,%es:(%edi)
	jump_139004:
		add    $0x8,%esi
		decl   -0x40(%ebp)
		jne    jump_138f7f
	jump_139010:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		leave
		ret    $0xc


.data

GLOBAL (asm_draw_ranges)	/* 0x1E957C */
		.fill   0xf00

