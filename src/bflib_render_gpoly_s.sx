
#ifdef NEED_UNDERSCORE
# define TRANSFORM_SYMBOLS
# define EXPORT_SYMBOL(sym) _ ## sym
#else
# define EXPORT_SYMBOL(sym) sym
#endif

#ifndef TRANSFORM_SYMBOLS

# define GLOBAL(sym) \
  .global sym; \
  sym ##:

# define GLOBAL_FUNC(sym) \
  GLOBAL (sym)

#else

# define GLOBAL(sym) \
  .global EXPORT_SYMBOL (sym); \
  EXPORT_SYMBOL (sym) ##: \
  sym ##:

# define GLOBAL_FUNC(sym) \
  .global sym; \
  GLOBAL (sym)

#endif


.text

.global EXPORT_SYMBOL(vec_window_width);
.global EXPORT_SYMBOL(vec_window_height);
.global EXPORT_SYMBOL(vec_mode);
.global EXPORT_SYMBOL(vec_screen);
.global EXPORT_SYMBOL(vec_map);
.global EXPORT_SYMBOL(pixmap);
.global EXPORT_SYMBOL(gpoly_countdown);
.global EXPORT_SYMBOL(gpoly_reptable);
.global EXPORT_SYMBOL(gpoly_divtable);
.global EXPORT_SYMBOL(gpoly_mode);


GLOBAL_FUNC (ASM_draw_gpoly_)
		pusha
		sub    $0x190,%esp
		xor    %ecx,%ecx
		mov    EXPORT_SYMBOL(vec_mode),%cl
		mov    %ecx,EXPORT_SYMBOL(gpoly_mode)
		mov    (%eax),%ebp
		or     (%edx),%ebp
		or     (%ebx),%ebp
		js     jump_1283e0
		mov    EXPORT_SYMBOL(vec_window_width),%ecx
		mov    (%eax),%esi
		cmp    %ecx,%esi
		jg     jump_1283e0
		mov    (%edx),%esi
		cmp    %ecx,%esi
		jg     jump_1283e0
		mov    (%ebx),%esi
		cmp    %ecx,%esi
		jg     jump_1283e0
		mov    $0x0,%ebp
		mov    %ebp,0x170(%esp)
		jmp    jump_1283f0

	jump_1283e0:
		mov    $0x1,%ebp
		mov    %ebp,0x170(%esp)
		/* Invalid code was here */
	jump_1283f0:
		mov    0x4(%eax),%ecx
		cmp    0x4(%edx),%ecx
		jle    jump_1283fc
		mov    0x4(%edx),%ecx
		xchg   %eax,%edx
	jump_1283fc:
		cmp    0x4(%ebx),%ecx
		jle    jump_128405
		mov    0x4(%ebx),%ecx
		xchg   %eax,%ebx
	jump_128405:
		mov    0x4(%edx),%ecx
		cmp    0x4(%ebx),%ecx
		jle    jump_12840f
		xchg   %edx,%ebx
	jump_12840f:
		mov    0x4(%eax),%ecx
		cmp    0x4(%ebx),%ecx
		je     draw_gpoly_end
		mov    (%eax),%ecx
		mov    0x4(%eax),%ebp
		mov    %ecx,0x38(%esp)
		mov    %ebp,0x34(%esp)
		shl    $0x10,%ecx
		mov    %ecx,0x3c(%esp)
		mov    (%edx),%ecx
		mov    0x4(%edx),%ebp
		mov    %ecx,0x50(%esp)
		mov    %ebp,0x4c(%esp)
		shl    $0x10,%ecx
		mov    %ecx,0x54(%esp)
		mov    (%ebx),%ecx
		mov    0x4(%ebx),%ebp
		mov    %ecx,0x68(%esp)
		mov    %ebp,0x64(%esp)
		shl    $0x10,%ecx
		mov    %ecx,0x6c(%esp)
		mov    0x10(%eax),%edi
		mov    0x10(%edx),%ebp
		mov    0x10(%ebx),%ecx
		shr    $0x10,%edi
		shr    $0x10,%ebp
		shr    $0x10,%ecx
		mov    %edi,0x40(%esp)
		mov    %ebp,0x58(%esp)
		mov    %ecx,0x70(%esp)
		mov    0x8(%eax),%edi
		mov    0xc(%eax),%ebp
		mov    0x8(%edx),%ecx
		mov    0xc(%edx),%esi
		shr    $0x10,%edi
		shr    $0x10,%ebp
		shr    $0x10,%ecx
		shr    $0x10,%esi
		mov    %edi,0x44(%esp)
		mov    %ebp,0x48(%esp)
		mov    %ecx,0x5c(%esp)
		mov    %esi,0x60(%esp)
		mov    0x8(%ebx),%ecx
		mov    0xc(%ebx),%esi
		shr    $0x10,%ecx
		shr    $0x10,%esi
		mov    %ecx,0x74(%esp)
		mov    %esi,0x78(%esp)
		mov    0x64(%esp),%ecx
		sub    0x34(%esp),%ecx
		je     jump_12859c
		mov    0x68(%esp),%eax
		sub    0x38(%esp),%eax
		test   $0xffffffe0,%ecx
		jne    jump_128570
		cmp    $0xffffffe0,%eax
		jl     jump_128570
		cmp    $0x1f,%eax
		jg     jump_128570
		mov    %ecx,%ebx
		shl    $0x8,%ebx
		mov    EXPORT_SYMBOL(gpoly_divtable)+0x80(%ebx,%eax,4),%eax
		mov    %eax,(%esp)
	jump_1284f4:
		mov    0x4c(%esp),%ecx
		sub    0x34(%esp),%ecx
		je     jump_12852c
		mov    0x50(%esp),%eax
		sub    0x38(%esp),%eax
		test   $0xffffffe0,%ecx
		jne    jump_128580
		cmp    $0xffffffe0,%eax
		jl     jump_128580
		cmp    $0x1f,%eax
		jg     jump_128580
		mov    %ecx,%ebx
		shl    $0x8,%ebx
		mov    EXPORT_SYMBOL(gpoly_divtable)+0x80(%ebx,%eax,4),%eax
		mov    %eax,0x4(%esp)
	jump_12852c:
		mov    0x64(%esp),%ecx
		sub    0x4c(%esp),%ecx
		je     jump_12859c
		mov    0x68(%esp),%eax
		sub    0x50(%esp),%eax
		test   $0xffffffe0,%ecx
		jne    jump_128590
		cmp    $0xffffffe0,%eax
		jl     jump_128590
		cmp    $0x1f,%eax
		jg     jump_128590
		mov    %ecx,%ebx
		shl    $0x8,%ebx
		mov    EXPORT_SYMBOL(gpoly_divtable)+0x80(%ebx,%eax,4),%eax
		mov    %eax,0x8(%esp)
		jmp    jump_12859c

	jump_128570:
		shl    $0x10,%eax
		cltd
		idiv   %ecx
		mov    %eax,(%esp)
		jmp    jump_1284f4

	jump_128580:
		shl    $0x10,%eax
		cltd
		idiv   %ecx
		mov    %eax,0x4(%esp)
		jmp    jump_12852c

	jump_128590:
		shl    $0x10,%eax
		cltd
		idiv   %ecx
		mov    %eax,0x8(%esp)
		mov    %eax,%eax
	jump_12859c:
		mov    0x4c(%esp),%ecx
		sub    0x34(%esp),%ecx
		mov    (%esp),%ebp
		mov    0x3c(%esp),%esi
		imul   %ecx,%ebp
		add    %ebp,%esi
		sub    0x54(%esp),%esi
		mov    %esi,0x7c(%esp)
		mov    EXPORT_SYMBOL(gpoly_mode),%ecx
		jmp    *jt_gpoly_sta(,%ecx,4)

	jump_gpoly_sta_md03:
		mov    %esp,%eax
		call   ASM_gpoly_sta_md03
		jmp    gpoly_sta_cont

	jump_gpoly_sta_md04:
		mov    %esp,%eax
		call   ASM_gpoly_sta_md04
		jmp    gpoly_sta_cont

	jump_gpoly_sta_md05:
		mov    %esp,%eax
		call   ASM_gpoly_sta_md05
		jmp    gpoly_sta_cont

	jump_gpoly_sta_md27:
		mov    %esp,%eax
		call   ASM_gpoly_sta_md27
		jmp    gpoly_sta_cont

	jump_gpoly_sta_md28:
		mov    %esp,%eax
		call   ASM_gpoly_sta_md28
		jmp    gpoly_sta_cont

	jump_gpoly_sta_nop:
	gpoly_sta_cont:
		mov    EXPORT_SYMBOL(gpoly_mode),%ecx
		jmp    *jt_gpoly_stb(,%ecx,4)

	jump_gpoly_stb_md05uni:
		mov    %esp,%eax
		call   ASM_gpoly_stb_md05uni
		jmp    draw_gpoly_end

	jump_gpoly_stb_md05p64:
		mov    %esp,%eax
		call   ASM_gpoly_stb_md05p64
		jmp    draw_gpoly_end

	jump_gpoly_stb_nop:
	draw_gpoly_end:
		add    $0x190,%esp
		popa
		ret


jt_gpoly_stb:	/* 0x12b0c0 */
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop	/* 4 */
		.long   jump_gpoly_stb_md05uni
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop	/* 8 */
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop	/* 12 */
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop	/* 16 */
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop	/* 20 */
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop	/* 24 */
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_md05p64
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop
		.long   jump_gpoly_stb_nop

jt_gpoly_sta:	/* 0x12b220 */
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_md04	/* 4 */
		.long   jump_gpoly_sta_md05
		.long   jump_gpoly_sta_md05
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_nop	/* 8 */
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_md03	/* 12 */
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_md04	/* 16 */
		.long   jump_gpoly_sta_md04
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_md05	/* 20 */
		.long   jump_gpoly_sta_md05
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_md03
		.long   jump_gpoly_sta_md05	/* 24 */
		.long   jump_gpoly_sta_md05
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md28
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md28
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md28
		.long   jump_gpoly_sta_md28
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md27
		.long   jump_gpoly_sta_md28
		.long   jump_gpoly_sta_md28
		.long   jump_gpoly_sta_nop
		.long   jump_gpoly_sta_nop



GLOBAL_FUNC (ASM_gpoly_mul_rot_1)
		imul   %edx
		shl    %eax
		rcl    %edx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_91ef
		inc    %eax
	jump_sta_md03_91ef:
		ret


GLOBAL_FUNC (ASM_gpoly_sta_md27)
		pusha
		mov    %eax,%esi
		mov    0x50(%esi),%edx
		mov    0x7c(%esi),%edi
		or     %edi,%edi
		sub    $0x0,%edx
		add    $0x0,%edx
		mov    0x38(%esi),%eax
		sub    %eax,%edx

		mov    0x68(%esi),%edi
		sub    %eax,%edi
		mov    0x34(%esi),%eax
		mov    0x4c(%esi),%ebx
		sub    %eax,%ebx
		mov    0x64(%esi),%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		imul   %edx,%ecx
		mov    0x7c(%esi),%ebp
		or     %ebp,%ebp
		js     jump_sta_md27_8604
		sub    %eax,%ecx
		sub    %eax,%ecx
	jump_sta_md27_8604:
		add    %eax,%ecx
		imul   %edi,%ebx
		sub    %ecx,%ebx
		je     jump_sta_md27_868a
		xor    %edx,%edx
		mov    $0x7fffffff,%eax
		idiv   %ebx
		mov    %eax,%ebp
		mov    0x34(%esi),%eax
		mov    0x64(%esi),%edi
		sub    %eax,%edi
		mov    %edi,0x178(%esi)
		mov    0x4c(%esi),%edi
		sub    %eax,%edi
		mov    %edi,0x174(%esi)
		mov    %ebp,%eax
		mov    0x44(%esi),%edx
		mov    0x74(%esi),%ebx
		sub    %edx,%ebx
		mov    0x5c(%esi),%ecx
		sub    %edx,%ecx
		mov    0x178(%esi),%edi
		imul   %edi,%ecx
		mov    0x174(%esi),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ac_gpoly_mul_rot_1
		mov    %eax,0x100(%esi)
		mov    %ebp,%eax
		mov    0x48(%esi),%edx
		mov    0x78(%esi),%ebx
		sub    %edx,%ebx
		mov    0x60(%esi),%ecx
		sub    %edx,%ecx
		mov    0x178(%esi),%edi
		imul   %edi,%ecx
		mov    0x174(%esi),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ac_gpoly_mul_rot_1
		mov    %eax,0x104(%esi)
		jmp    jump_sta_md27_869a

	jump_sta_md27_868a:
		xor    %eax,%eax
		mov    %eax,0x100(%esi)
		mov    %eax,0x104(%esi)
	jump_sta_md27_869a:
		mov    0x7c(%esi),%ecx
		or     %ecx,%ecx
		js     jump_sta_md27_87e7
		mov    0x4c(%esi),%ecx
		sub    0x34(%esi),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md27_86bf
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md27_86cd

	jump_sta_md27_86bf:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md27_86cd:
		mov    0x5c(%esi),%eax
		sub    0x44(%esi),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md27_86e2
		inc    %eax
	jump_sta_md27_86e2:
		mov    %eax,0x1c(%esi)
		mov    0x60(%esi),%eax
		sub    0x48(%esi),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md27_86fb
		inc    %eax
	jump_sta_md27_86fb:
		mov    %eax,0x28(%esi)
		mov    0x64(%esi),%ecx
		sub    0x4c(%esi),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md27_8718
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md27_8726

	jump_sta_md27_8718:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md27_8726:
		mov    0x74(%esi),%eax
		sub    0x5c(%esi),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md27_873b
		inc    %eax
	jump_sta_md27_873b:
		mov    %eax,0x18(%esi)
		mov    0x78(%esi),%eax
		sub    0x60(%esi),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md27_8754
		inc    %eax
	jump_sta_md27_8754:
		mov    %eax,0x24(%esi)
		mov    0x4(%esi),%eax
		mov    0x100(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x1c(%esi)
		mov    0x4(%esi),%eax
		mov    0x104(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x28(%esi)
		mov    0x4(%esi),%eax
		mov    0x108(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0xc(%esi)
		mov    0x8(%esi),%eax
		mov    0x100(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x18(%esi)
		mov    0x8(%esi),%eax
		mov    0x104(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x24(%esi)
		mov    0x8(%esi),%eax
		mov    0x108(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x10(%esi)
		jmp    jump_sta_md27_8882

	jump_sta_md27_87e7:
		mov    0x64(%esi),%ecx
		sub    0x34(%esi),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md27_8800
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md27_880e

	jump_sta_md27_8800:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md27_880e:
		mov    0x74(%esi),%eax
		sub    0x44(%esi),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md27_8823
		inc    %eax
	jump_sta_md27_8823:
		mov    %eax,0x1c(%esi)
		mov    0x78(%esi),%eax
		sub    0x48(%esi),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md27_883c
		inc    %eax
	jump_sta_md27_883c:
		mov    %eax,0x28(%esi)
		mov    (%esi),%eax
		mov    0x100(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x1c(%esi)
		mov    (%esi),%eax
		mov    0x104(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x28(%esi)
		mov    (%esi),%eax
		mov    0x108(%esi),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0xc(%esi)
	jump_sta_md27_8882:
		mov    0x44(%esi),%eax
		shl    $0x10,%eax
		add    0x100(%esi),%eax
		mov    %eax,0x15c(%esi)
		mov    0x48(%esi),%eax
		shl    $0x10,%eax
		add    0x104(%esi),%eax
		mov    %eax,0x160(%esi)
		mov    0x5c(%esi),%eax
		shl    $0x10,%eax
		add    0x100(%esi),%eax
		mov    %eax,0x168(%esi)
		mov    0x60(%esi),%eax
		shl    $0x10,%eax
		add    0x104(%esi),%eax
		mov    %eax,0x16c(%esi)
		mov    0x100(%esi),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0xf4(%esi)
		mov    %edx,0xf8(%esi)
		mov    0x104(%esi),%eax
		shl    $0x10,%eax
		mov    0x104(%esi),%edx
		sar    $0x10,%edx
		mov    0xf8(%esi),%al
		or     %al,%al
		jns    jump_sta_md27_891a
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md27_891a:
		mov    %eax,0xf8(%esi)
		mov    %edx,0xfc(%esi)
		mov    0x1c(%esi),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x10c(%esi)
		mov    %edx,0x110(%esi)
		mov    0x28(%esi),%eax
		shl    $0x10,%eax
		mov    0x28(%esi),%edx
		sar    $0x10,%edx
		mov    0x110(%esi),%al
		or     %al,%al
		jns    jump_sta_md27_8963
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md27_8963:
		mov    %eax,0x110(%esi)
		mov    %edx,0x114(%esi)
		mov    0x15c(%esi),%ecx
		mov    0x160(%esi),%edx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %ecx,0x124(%esi)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x128(%esi)
		mov    %edx,0x12c(%esi)
		mov    0x7c(%esi),%eax
		or     %eax,%eax
		js     gpoly_sta_md27_end
		mov    0x18(%esi),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x118(%esi)
		mov    %edx,0x11c(%esi)
		mov    0x24(%esi),%eax
		shl    $0x10,%eax
		mov    0x24(%esi),%edx
		sar    $0x10,%edx
		mov    0x11c(%esi),%al
		or     %al,%al
		jns    jump_sta_md27_89f3
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md27_89f3:
		mov    %eax,0x11c(%esi)
		mov    %edx,0x120(%esi)
		mov    0x168(%esi),%ecx
		mov    0x16c(%esi),%edx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %ecx,0x130(%esi)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x134(%esi)
		mov    %edx,0x138(%esi)
	gpoly_sta_md27_end:
		popa
		ret


GLOBAL_FUNC (ASM_gpoly_sta_md28)
		pusha
		mov    %esp,0x17c(%eax)
		mov    %eax,%esp
		/* end of added function header */
		mov    0x50(%esp),%esi
		mov    0x7c(%esp),%edi
		or     %edi,%edi
		sub    $0x0,%esi
		add    $0x0,%esi
		mov    0x38(%esp),%eax
		sub    %eax,%esi
		mov    0x68(%esp),%edi
		sub    %eax,%edi
		mov    0x34(%esp),%eax
		mov    0x4c(%esp),%ebx
		sub    %eax,%ebx
		mov    0x64(%esp),%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		imul   %esi,%ecx

		mov    0x7c(%esp),%ebp
		or     %ebp,%ebp
		js     jump_sta_md28_8a7e
		sub    %eax,%ecx
		sub    %eax,%ecx
	jump_sta_md28_8a7e:
		add    %eax,%ecx
		imul   %edi,%ebx
		sub    %ecx,%ebx
		je     jump_sta_md28_8b38
		xor    %edx,%edx
		mov    $0x7fffffff,%eax
		idiv   %ebx
		mov    %eax,%ebp
		mov    0x34(%esp),%eax
		mov    0x64(%esp),%edi
		sub    %eax,%edi
		mov    0x178(%esp),%edi
		mov    0x4c(%esp),%edi
		sub    %eax,%edi
		mov    0x174(%esp),%edi

		mov    %ebp,%eax
		mov    0x40(%esp),%edx
		mov    0x70(%esp),%ebx
		sub    %edx,%ebx
		mov    0x58(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x108(%esp)
		mov    %ebp,%eax
		mov    0x44(%esp),%edx
		mov    0x74(%esp),%ebx
		sub    %edx,%ebx
		mov    0x5c(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x100(%esp)
		mov    %ebp,%eax
		mov    0x48(%esp),%edx
		mov    0x78(%esp),%ebx
		sub    %edx,%ebx
		mov    0x60(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x104(%esp)
		jmp    jump_sta_md28_8b4f

	jump_sta_md28_8b38:
		xor    %eax,%eax
		mov    %eax,0x108(%esp)
		mov    %eax,0x100(%esp)
		mov    %eax,0x104(%esp)
	jump_sta_md28_8b4f:
		mov    0x7c(%esp),%ecx
		or     %ecx,%ecx
		js     jump_sta_md28_8cce
		mov    0x4c(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md28_8b74
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md28_8b82

	jump_sta_md28_8b74:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md28_8b82:
		mov    0x58(%esp),%eax
		sub    0x40(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8b97
		inc    %eax
	jump_sta_md28_8b97:
		mov    %eax,0xc(%esp)
		mov    0x5c(%esp),%eax
		sub    0x44(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8bb0
		inc    %eax
	jump_sta_md28_8bb0:
		mov    %eax,0x1c(%esp)
		mov    0x60(%esp),%eax
		sub    0x48(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8bc9
		inc    %eax
	jump_sta_md28_8bc9:
		mov    %eax,0x28(%esp)
		mov    0x64(%esp),%ecx
		sub    0x4c(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md28_8be6
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md28_8bf4

	jump_sta_md28_8be6:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md28_8bf4:
		mov    0x70(%esp),%eax
		sub    0x58(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8c09
		inc    %eax
	jump_sta_md28_8c09:
		mov    %eax,0x10(%esp)
		mov    0x74(%esp),%eax
		sub    0x5c(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8c22
		inc    %eax
	jump_sta_md28_8c22:
		mov    %eax,0x18(%esp)
		mov    0x78(%esp),%eax
		sub    0x60(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8c3b
		inc    %eax
	jump_sta_md28_8c3b:
		mov    %eax,0x24(%esp)
		mov    0x4(%esp),%eax
		mov    0x100(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x1c(%esp)
		mov    0x4(%esp),%eax
		mov    0x104(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x28(%esp)
		mov    0x4(%esp),%eax
		mov    0x108(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0xc(%esp)
		mov    0x8(%esp),%eax
		mov    0x100(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x18(%esp)
		mov    0x8(%esp),%eax
		mov    0x104(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x24(%esp)
		mov    0x8(%esp),%eax
		mov    0x108(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x10(%esp)
		jmp    jump_sta_md28_8d82

	jump_sta_md28_8cce:
		mov    0x64(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md28_8ce7
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md28_8cf5

	jump_sta_md28_8ce7:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md28_8cf5:
		mov    0x70(%esp),%eax
		sub    0x40(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8d0a
		inc    %eax
	jump_sta_md28_8d0a:
		mov    %eax,0xc(%esp)
		mov    0x74(%esp),%eax
		sub    0x44(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8d23
		inc    %eax
	jump_sta_md28_8d23:
		mov    %eax,0x1c(%esp)
		mov    0x78(%esp),%eax
		sub    0x48(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md28_8d3c
		inc    %eax
	jump_sta_md28_8d3c:
		mov    %eax,0x28(%esp)
		mov    (%esp),%eax
		mov    0x100(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x1c(%esp)
		mov    (%esp),%eax
		mov    0x104(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0x28(%esp)
		mov    (%esp),%eax
		mov    0x108(%esp),%ebx
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		sub    %eax,0xc(%esp)
	jump_sta_md28_8d82:
		mov    0x40(%esp),%eax
		shl    $0x10,%eax
		add    0x108(%esp),%eax
		mov    %eax,0x158(%esp)
		mov    0x44(%esp),%eax
		shl    $0x10,%eax
		add    0x100(%esp),%eax
		mov    %eax,0x15c(%esp)
		mov    0x48(%esp),%eax
		shl    $0x10,%eax
		add    0x104(%esp),%eax
		mov    %eax,0x160(%esp)
		mov    0x58(%esp),%eax
		shl    $0x10,%eax
		add    0x108(%esp),%eax
		mov    %eax,0x164(%esp)
		mov    0x5c(%esp),%eax
		shl    $0x10,%eax
		add    0x100(%esp),%eax
		mov    %eax,0x168(%esp)
		mov    0x60(%esp),%eax
		shl    $0x10,%eax
		add    0x104(%esp),%eax
		mov    %eax,0x16c(%esp)
		mov    0x100(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    0x109(%esp),%ax
		or     %ax,%ax
		jns    jump_sta_md28_8e24
		sub    $0xffff,%eax
		sbb    $0x0,%dl
	jump_sta_md28_8e24:
		mov    %eax,0xf4(%esp)
		mov    %edx,0xf8(%esp)
		mov    0x104(%esp),%eax
		shl    $0x10,%eax
		mov    0x104(%esp),%edx
		sar    $0x10,%edx
		mov    0xf8(%esp),%al
		or     %al,%al
		jns    jump_sta_md28_8e59
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md28_8e59:
		mov    %eax,0xf8(%esp)
		mov    %edx,0xfc(%esp)
		mov    0x1c(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    0xd(%esp),%ax
		or     %ax,%ax
		jns    jump_sta_md28_8e85
		sub    $0x10000,%eax
		sbb    $0x0,%dl
	jump_sta_md28_8e85:
		mov    %eax,0x10c(%esp)
		mov    %edx,0x110(%esp)
		mov    0x28(%esp),%eax
		shl    $0x10,%eax
		mov    0x28(%esp),%edx
		sar    $0x10,%edx
		mov    0x110(%esp),%al
		or     %al,%al
		jns    jump_sta_md28_8eb4
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md28_8eb4:
		mov    %eax,0x110(%esp)
		mov    %edx,0x114(%esp)
		mov    0x158(%esp),%ebx
		mov    0x15c(%esp),%ecx
		mov    0x160(%esp),%edx
		mov    %bl,0x12c(%esp)
		shr    $0x8,%ebx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %bx,%cx
		mov    %ecx,0x124(%esp)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x128(%esp)
		mov    0x12c(%esp),%dl
		mov    %edx,0x12c(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     gpoly_sta_md28_end
		mov    0x18(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    0x11(%esp),%ax
		or     %ax,%ax
		jns    jump_sta_md28_8f42
		sub    $0x10000,%eax
		sbb    $0x0,%dl
	jump_sta_md28_8f42:
		mov    %eax,0x118(%esp)
		mov    %edx,0x11c(%esp)
		mov    0x24(%esp),%eax
		shl    $0x10,%eax
		mov    0x24(%esp),%edx
		sar    $0x10,%edx
		mov    0x11c(%esp),%al
		or     %al,%al
		jns    jump_sta_md28_8f71
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md28_8f71:
		mov    %eax,0x11c(%esp)
		mov    %edx,0x120(%esp)
		mov    0x164(%esp),%ebx
		mov    0x168(%esp),%ecx
		mov    0x16c(%esp),%edx
		mov    %bl,0x138(%esp)
		shr    $0x8,%ebx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %bx,%cx
		mov    %ecx,0x130(%esp)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x134(%esp)
		mov    0x138(%esp),%dl
		mov    %edx,0x138(%esp)
	gpoly_sta_md28_end:
		/* start of added function footer */
		mov    0x17c(%esp),%esp
		popa
		ret


GLOBAL_FUNC (ASM_gpoly_sta_md04)
		pusha
		mov    %esp,0x17c(%eax)
		mov    %eax,%esp
		/* end of added function header */
		mov    0x50(%esp),%esi
		mov    0x7c(%esp),%edi
		or     %edi,%edi
		sub    $0x0,%esi
		add    $0x0,%esi
		mov    0x38(%esp),%eax
		sub    %eax,%esi
		mov    0x68(%esp),%edi
		sub    %eax,%edi
		mov    0x34(%esp),%eax
		mov    0x4c(%esp),%ebx
		sub    %eax,%ebx
		mov    0x64(%esp),%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		imul   %esi,%ecx

		mov    0x7c(%esp),%ebp
		or     %ebp,%ebp
		js     jump_sta_md04_9017
		sub    %eax,%ecx
		sub    %eax,%ecx
	jump_sta_md04_9017:
		add    %eax,%ecx
		imul   %edi,%ebx
		sub    %ecx,%ebx
		je     jump_sta_md04_906d
		xor    %edx,%edx
		mov    $0x7fffffff,%eax
		idiv   %ebx
		mov    %eax,%ebp
		mov    0x34(%esp),%eax
		mov    0x64(%esp),%edi
		sub    %eax,%edi
		mov    %edi,0x178(%esp)
		mov    0x4c(%esp),%edi
		sub    %eax,%edi
		mov    %edi,0x174(%esp)
		mov    %ebp,%eax
		mov    0x40(%esp),%edx
		mov    0x70(%esp),%ebx
		sub    %edx,%ebx
		mov    0x58(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x108(%esp)
		jmp    jump_sta_md04_9076

	jump_sta_md04_906d:
		xor    %eax,%eax
		mov    %eax,0x108(%esp)
	jump_sta_md04_9076:
		mov    0x7c(%esp),%ecx
		or     %ecx,%ecx
		js     jump_sta_md04_9104
		mov    0x4c(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md04_909b
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md04_90a9

	jump_sta_md04_909b:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md04_90a9:
		mov    0x58(%esp),%eax
		sub    0x40(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md04_90be
		inc    %eax
	jump_sta_md04_90be:
		mov    %eax,0xc(%esp)
		mov    0x64(%esp),%ecx
		sub    0x4c(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md04_90db
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md04_90e9

	jump_sta_md04_90db:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md04_90e9:
		mov    0x70(%esp),%eax
		sub    0x58(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md04_90fe
		inc    %eax
	jump_sta_md04_90fe:
		mov    %eax,0x10(%esp)
		jmp    jump_sta_md04_9144

	jump_sta_md04_9104:
		mov    0x64(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md04_911d
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md04_912b

	jump_sta_md04_911d:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md04_912b:
		mov    0x70(%esp),%eax
		sub    0x40(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md04_9140
		inc    %eax
	jump_sta_md04_9140:
		mov    %eax,0xc(%esp)
	jump_sta_md04_9144:
		mov    0x40(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x158(%esp)
		mov    0x58(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x164(%esp)
		/* start of added function footer */
		mov    0x17c(%esp),%esp
		popa
		ret

GLOBAL_FUNC (ASM_gpoly_sta_md03)
		pusha
		mov    %esp,0x17c(%eax)
		mov    %eax,%esp
		/* end of added function header */
		mov    0x50(%esp),%esi
		mov    0x7c(%esp),%edi
		or     %edi,%edi
		sub    $0x0,%esi
		add    $0x0,%esi
		mov    0x38(%esp),%eax
		sub    %eax,%esi
		mov    0x68(%esp),%edi
		sub    %eax,%edi
		mov    0x34(%esp),%eax
		mov    0x4c(%esp),%ebx
		sub    %eax,%ebx
		mov    0x64(%esp),%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		imul   %esi,%ecx
		mov    0x7c(%esp),%ebp
		or     %ebp,%ebp
		js     jump_sta_md03_91a2
		sub    %eax,%ecx
		sub    %eax,%ecx
	jump_sta_md03_91a2:
		add    %eax,%ecx
		imul   %edi,%ebx
		sub    %ecx,%ebx
		je     jump_sta_md03_9228
		xor    %edx,%edx
		mov    $0x7fffffff,%eax
		idiv   %ebx
		mov    %eax,%ebp
		mov    0x34(%esp),%eax
		mov    0x64(%esp),%edi
		sub    %eax,%edi
		mov    0x178(%esp),%edi
		mov    0x4c(%esp),%edi
		sub    %eax,%edi
		mov    0x174(%esp),%edi
		mov    %ebp,%eax
		mov    0x44(%esp),%edx
		mov    0x74(%esp),%ebx
		sub    %edx,%ebx
		mov    0x5c(%esp),%ecx
		sub    %edx,%ecx
		mov    %edi,0x178(%esp)
		imul   %edi,%ecx
		mov    %edi,0x174(%esp)
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x100(%esp)
		mov    %ebp,%eax
		mov    0x48(%esp),%edx
		mov    0x78(%esp),%ebx
		sub    %edx,%ebx
		mov    0x60(%esp),%ecx
		sub    %edx,%ecx
		mov    %edi,0x178(%esp)
		imul   %edi,%ecx
		mov    %edi,0x174(%esp)
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x104(%esp)
		jmp    jump_sta_md03_9238

	jump_sta_md03_9228:
		xor    %eax,%eax
		mov    %eax,0x100(%esp)
		mov    %eax,0x104(%esp)
	jump_sta_md03_9238:
		mov    0x7c(%esp),%ecx
		or     %ecx,%ecx
		js     jump_sta_md03_92f8
		mov    0x4c(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md03_925d
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md03_926b

	jump_sta_md03_925d:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md03_926b:
		mov    0x5c(%esp),%eax
		sub    0x44(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_9280
		inc    %eax
	jump_sta_md03_9280:
		mov    %eax,0x1c(%esp)
		mov    0x60(%esp),%eax
		sub    0x48(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_9299
		inc    %eax
	jump_sta_md03_9299:
		mov    %eax,0x28(%esp)
		mov    0x64(%esp),%ecx
		sub    0x4c(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md03_92b6
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md03_92c4

	jump_sta_md03_92b6:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md03_92c4:
		mov    0x74(%esp),%eax
		sub    0x5c(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_92d9
		inc    %eax
	jump_sta_md03_92d9:
		mov    %eax,0x18(%esp)
		mov    0x78(%esp),%eax
		sub    0x60(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_92f2
		inc    %eax
	jump_sta_md03_92f2:
		mov    %eax,0x24(%esp)
		jmp    jump_sta_md03_9351

	jump_sta_md03_92f8:
		mov    0x64(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md03_9311
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md03_931f

	jump_sta_md03_9311:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md03_931f:
		mov    0x74(%esp),%eax
		sub    0x44(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_9334
		inc    %eax
	jump_sta_md03_9334:
		mov    %eax,0x1c(%esp)
		mov    0x78(%esp),%eax
		sub    0x48(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md03_934d
		inc    %eax
	jump_sta_md03_934d:
		mov    %eax,0x28(%esp)
	jump_sta_md03_9351:
		mov    0x44(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x15c(%esp)
		mov    0x48(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x160(%esp)
		mov    0x5c(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x168(%esp)
		mov    0x60(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x16c(%esp)
		mov    0x100(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0xf4(%esp)
		mov    %edx,0xf8(%esp)
		mov    0x104(%esp),%eax
		shl    $0x10,%eax
		mov    0x104(%esp),%edx
		sar    $0x10,%edx
		mov    0xf8(%esp),%al
		or     %al,%al
		jns    jump_sta_md03_93cd
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md03_93cd:
		mov    %eax,0xf8(%esp)
		mov    %edx,0xfc(%esp)
		mov    0x1c(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x10c(%esp)
		mov    %edx,0x110(%esp)
		mov    0x28(%esp),%eax
		shl    $0x10,%eax
		mov    0x28(%esp),%edx
		sar    $0x10,%edx
		mov    0x110(%esp),%al
		or     %al,%al
		jns    jump_sta_md03_9416
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md03_9416:
		mov    %eax,0x110(%esp)
		mov    %edx,0x114(%esp)
		mov    0x15c(%esp),%ecx
		mov    0x160(%esp),%edx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %ecx,0x124(%esp)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x128(%esp)
		mov    %edx,0x12c(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     gpoly_sta_md03_end
		mov    0x18(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x118(%esp)
		mov    %edx,0x11c(%esp)
		mov    0x24(%esp),%eax
		shl    $0x10,%eax
		mov    0x24(%esp),%edx
		sar    $0x10,%edx
		mov    0x11c(%esp),%al
		or     %al,%al
		jns    jump_sta_md03_94a6
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md03_94a6:
		mov    %eax,0x11c(%esp)
		mov    %edx,0x120(%esp)
		mov    0x168(%esp),%ecx
		mov    0x16c(%esp),%edx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %ecx,0x130(%esp)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x134(%esp)
		mov    %edx,0x138(%esp)
	gpoly_sta_md03_end:
		/* start of added function footer */
		mov    0x17c(%esp),%esp
		popa
		ret


GLOBAL_FUNC (ASM_gpoly_sta_md05)
		pusha
		mov    %esp,0x17c(%eax)
		mov    %eax,%esp
		/* end of added function header */
		mov    0x50(%esp),%esi
		mov    0x7c(%esp),%edi
		or     %edi,%edi
		sub    $0x0,%esi
		add    $0x0,%esi
		mov    0x38(%esp),%eax
		sub    %eax,%esi
		mov    0x68(%esp),%edi
		sub    %eax,%edi
		mov    0x34(%esp),%eax
		mov    0x4c(%esp),%ebx
		sub    %eax,%ebx
		mov    0x64(%esp),%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		imul   %esi,%ecx
		mov    0x7c(%esp),%ebp
		or     %ebp,%ebp
		js     jump_sta_md05_9531
		sub    %eax,%ecx
		sub    %eax,%ecx
	jump_sta_md05_9531:
		add    %eax,%ecx
		imul   %edi,%ebx
		sub    %ecx,%ebx
		je     jump_sta_md05_95eb
		xor    %edx,%edx
		mov    $0x7fffffff,%eax
		idiv   %ebx
		mov    %eax,%ebp
		mov    0x34(%esp),%eax
		mov    0x64(%esp),%edi
		sub    %eax,%edi
		mov    %edi,0x178(%esp)
		mov    0x4c(%esp),%edi
		sub    %eax,%edi
		mov    %edi,0x174(%esp)
		mov    %ebp,%eax
		mov    0x40(%esp),%edx
		mov    0x70(%esp),%ebx
		sub    %edx,%ebx
		mov    0x58(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x108(%esp)
		mov    %ebp,%eax
		mov    0x44(%esp),%edx
		mov    0x74(%esp),%ebx
		sub    %edx,%ebx
		mov    0x5c(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x100(%esp)
		mov    %ebp,%eax
		mov    0x48(%esp),%edx
		mov    0x78(%esp),%ebx
		sub    %edx,%ebx
		mov    0x60(%esp),%ecx
		sub    %edx,%ecx
		mov    0x178(%esp),%edi
		imul   %edi,%ecx
		mov    0x174(%esp),%edi
		imul   %edi,%ebx
		sub    %ecx,%ebx
		mov    %ebx,%edx
		call   ASM_gpoly_mul_rot_1
		mov    %eax,0x104(%esp)
		jmp    jump_sta_md05_9602

	jump_sta_md05_95eb:
		xor    %eax,%eax
		mov    %eax,0x108(%esp)
		mov    %eax,0x100(%esp)
		mov    %eax,0x104(%esp)
	jump_sta_md05_9602:
		mov    0x7c(%esp),%ecx
		or     %ecx,%ecx
		js     jump_sta_md05_96f4
		mov    0x4c(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md05_9627
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md05_9635

	jump_sta_md05_9627:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md05_9635:
		mov    0x58(%esp),%eax
		sub    0x40(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_964a
		inc    %eax
	jump_sta_md05_964a:
		mov    %eax,0xc(%esp)
		mov    0x5c(%esp),%eax
		sub    0x44(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_9663
		inc    %eax
	jump_sta_md05_9663:
		mov    %eax,0x1c(%esp)
		mov    0x60(%esp),%eax
		sub    0x48(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_967c
		inc    %eax
	jump_sta_md05_967c:
		mov    %eax,0x28(%esp)
		mov    0x64(%esp),%ecx
		sub    0x4c(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md05_9699
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md05_96a7

	jump_sta_md05_9699:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md05_96a7:
		mov    0x70(%esp),%eax
		sub    0x58(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_96bc
		inc    %eax
	jump_sta_md05_96bc:
		mov    %eax,0x10(%esp)
		mov    0x74(%esp),%eax
		sub    0x5c(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_96d5
		inc    %eax
	jump_sta_md05_96d5:
		mov    %eax,0x18(%esp)
		mov    0x78(%esp),%eax
		sub    0x60(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_96ee
		inc    %eax
	jump_sta_md05_96ee:
		mov    %eax,0x24(%esp)
		jmp    jump_sta_md05_9766

	jump_sta_md05_96f4:
		mov    0x64(%esp),%ecx
		sub    0x34(%esp),%ecx
		cmp    $0xff,%ecx
		jg     jump_sta_md05_970d
		mov    EXPORT_SYMBOL(gpoly_reptable)(,%ecx,4),%ebx
		jmp    jump_sta_md05_971b

	jump_sta_md05_970d:
		mov    $0x0,%edx
		mov    $0x7fffffff,%eax
		idiv   %ecx
		mov    %eax,%ebx
	jump_sta_md05_971b:
		mov    0x70(%esp),%eax
		sub    0x40(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_9730
		inc    %eax
	jump_sta_md05_9730:
		mov    %eax,0xc(%esp)
		mov    0x74(%esp),%eax
		sub    0x44(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_9749
		inc    %eax
	jump_sta_md05_9749:
		mov    %eax,0x1c(%esp)
		mov    0x78(%esp),%eax
		sub    0x48(%esp),%eax
		shl    %eax
		imul   %ebx
		mov    %dx,%ax
		rol    $0x10,%eax
		jns    jump_sta_md05_9762
		inc    %eax
	jump_sta_md05_9762:
		mov    %eax,0x28(%esp)
	jump_sta_md05_9766:
		mov    0x40(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x158(%esp)
		mov    0x44(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x15c(%esp)
		mov    0x48(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x160(%esp)
		mov    0x58(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x164(%esp)
		mov    0x5c(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x168(%esp)
		mov    0x60(%esp),%eax
		shl    $0x10,%eax
		mov    %eax,0x16c(%esp)
		mov    0x100(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    0x109(%esp),%ax
		or     %ax,%ax
		jns    jump_sta_md05_97de
		sub    $0xffff,%eax
		sbb    $0x0,%dl
	jump_sta_md05_97de:
		mov    %eax,0xf4(%esp)
		mov    %edx,0xf8(%esp)
		mov    0x104(%esp),%eax
		shl    $0x10,%eax
		mov    0x104(%esp),%edx
		sar    $0x10,%edx
		mov    0xf8(%esp),%al
		or     %al,%al
		jns    jump_sta_md05_9813
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md05_9813:
		mov    %eax,0xf8(%esp)
		mov    %edx,0xfc(%esp)
		mov    0x1c(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    0xd(%esp),%ax
		or     %ax,%ax
		jns    jump_sta_md05_983f
		sub    $0x10000,%eax
		sbb    $0x0,%dl
	jump_sta_md05_983f:
		mov    %eax,0x10c(%esp)
		mov    %edx,0x110(%esp)
		mov    0x28(%esp),%eax
		shl    $0x10,%eax
		mov    0x28(%esp),%edx
		sar    $0x10,%edx
		mov    0x110(%esp),%al
		or     %al,%al
		jns    jump_sta_md05_986e
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md05_986e:
		mov    %eax,0x110(%esp)
		mov    %edx,0x114(%esp)
		mov    0x158(%esp),%ebx
		mov    0x15c(%esp),%ecx
		mov    0x160(%esp),%edx
		mov    %bl,0x12c(%esp)
		shr    $0x8,%ebx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %bx,%cx
		mov    %ecx,0x124(%esp)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x128(%esp)
		mov    0x12c(%esp),%dl
		mov    %edx,0x12c(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     gpoly_sta_md05_end
		mov    0x18(%esp),%eax
		mov    %eax,%edx
		shl    $0x10,%eax
		sar    $0x10,%edx
		mov    0x11(%esp),%ax
		or     %ax,%ax
		jns    jump_sta_md05_98fc
		sub    $0x10000,%eax
		sbb    $0x0,%dl
	jump_sta_md05_98fc:
		mov    %eax,0x118(%esp)
		mov    %edx,0x11c(%esp)
		mov    0x24(%esp),%eax
		shl    $0x10,%eax
		mov    0x24(%esp),%edx
		sar    $0x10,%edx
		mov    0x11c(%esp),%al
		or     %al,%al
		jns    jump_sta_md05_992b
		sub    $0x100,%eax
		sbb    $0x0,%dl
	jump_sta_md05_992b:
		mov    %eax,0x11c(%esp)
		mov    %edx,0x120(%esp)
		mov    0x164(%esp),%ebx
		mov    0x168(%esp),%ecx
		mov    0x16c(%esp),%edx
		mov    %bl,0x138(%esp)
		shr    $0x8,%ebx
		mov    %ecx,%eax
		shl    $0x10,%ecx
		shr    $0x10,%eax
		mov    %bx,%cx
		mov    %ecx,0x130(%esp)
		mov    %edx,%ecx
		shl    $0x10,%ecx
		shl    $0x8,%edx
		shr    $0x18,%edx
		shl    $0x8,%edx
		mov    %al,%cl
		mov    %ecx,0x134(%esp)
		mov    0x138(%esp),%dl
		mov    %edx,0x138(%esp)
	gpoly_sta_md05_end:
		/* start of added function footer */
		mov    0x17c(%esp),%esp
		popa
		ret


GLOBAL_FUNC (ASM_gpoly_stb_md05uni)
		pusha
		mov    %esp,0x17c(%eax)
		mov    %eax,%esp
		/* end of added function header */
		/* Invalid code was here */
		mov    0x170(%esp),%eax
		or     %eax,%eax
		jne    jump_129f20
		mov    EXPORT_SYMBOL(vec_screen_width),%ecx
		mov    %ecx,0xac(%esp)
		mov    $0x2,%ecx
		mov    %ecx,0x30(%esp)
		mov    0xc(%esp),%eax
		mov    %eax,0x150(%esp)
		mov    0x10c(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x110(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x114(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_129a39
		mov    0x4(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    (%esp),%eax
		mov    %eax,0x88(%esp)
		jmp    jump_129a4e

	jump_129a39:
		mov    (%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x4(%esp),%eax
		mov    %eax,0x88(%esp)

	jump_129a4e:
		mov    0x124(%esp),%ecx
		mov    0x128(%esp),%edx
		mov    0x12c(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x34(%esp),%esi
		mov    EXPORT_SYMBOL(vec_screen_width),%edi
		imul   %esi,%edi
		add    EXPORT_SYMBOL(vec_screen),%edi
		mov    0x34(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jg     gpoly_stb_md05uni_end
		mov    0x4c(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_129a9d
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_129a9d:
		sub    0x34(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x38(%esp),%esi
		mov    %esi,0x13c(%esp)
		mov    0x3c(%esp),%eax
		mov    %eax,%ebp
		je     jump_129de8
		mov    0x34(%esp),%esi
		or     %esi,%esi
		js     jump_129d60
		mov    0x13c(%esp),%esi
		jmp    jump_129cf6

	gpoly_drwa_00:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,(%edi)

	gpoly_drwa_15:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x1(%edi)

	gpoly_drwa_14:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x2(%edi)

	gpoly_drwa_13:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x3(%edi)

	gpoly_drwa_12:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x4(%edi)

	gpoly_drwa_11:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x5(%edi)

	gpoly_drwa_10:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x6(%edi)

	gpoly_drwa_09:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x7(%edi)

	gpoly_drwa_08:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x8(%edi)

	gpoly_drwa_07:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x9(%edi)

	gpoly_drwa_06:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xa(%edi)

	gpoly_drwa_05:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xb(%edi)

	gpoly_drwa_04:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xc(%edi)

	gpoly_drwa_03:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xd(%edi)

	gpoly_drwa_02:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xe(%edi)

	gpoly_drwa_01:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xf(%edi)
		add    $0x10,%edi
		subl   $0x10,0xdc(%esp)
		jg     gpoly_drwa_00

	jump_129c87:
		mov    0xb4(%esp),%eax
		mov    0xb8(%esp),%ebp
		mov    0xbc(%esp),%edi
		mov    0x13c(%esp),%esi
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		mov    0xd0(%esp),%ecx
		mov    0xcc(%esp),%ebx
		mov    0xd8(%esp),%edx
		add    0x150(%esp),%bl
		adc    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_129de8

	jump_129cf6:
		mov    %eax,0xb4(%esp)
		mov    %ebp,0xb8(%esp)
		mov    %edi,0xbc(%esp)
		sar    $0x10,%eax
		mov    0xbc(%esp),%edi
		mov    %ecx,0xd0(%esp)
		mov    %ebx,0xcc(%esp)
		mov    %edx,0xd8(%esp)
		sar    $0x10,%ebp
		add    %eax,%edi
		sub    %eax,%ebp
		jle    jump_129c87
		mov    %ebp,%eax
		and    $0xf,%eax
		add    EXPORT_SYMBOL(gpoly_countdown)(,%eax,4),%edi
		mov    %ebp,0xdc(%esp)
		mov    0xf4(%esp),%ebp
		mov    0xf8(%esp),%esi
		jmp    *jt_gpoly_drwa(,%eax,4)


	jump_129d60:
		add    0x150(%esp),%bl
		adc    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		mov    %eax,0xb4(%esp)
		sar    $0x10,%eax
		sub    %eax,0x13c(%esp)
		mov    0xb4(%esp),%eax
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		mov    %eax,0xb4(%esp)
		sar    $0x10,%eax
		add    %eax,0x13c(%esp)
		mov    0xb4(%esp),%eax
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_129de0
		inc    %esi
		js     jump_129d60
		mov    0x13c(%esp),%esi
		jmp    jump_129cf6

	jump_129de0:
		mov    0x13c(%esp),%esi
		nop

	jump_129de8:
		decl   0x30(%esp)
		je     gpoly_stb_md05uni_end
		mov    %eax,0xb4(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_129eb0
		mov    0x8(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x10(%esp),%eax
		mov    %eax,0x150(%esp)
		mov    0x118(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x11c(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x120(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x130(%esp),%ecx
		mov    0x134(%esp),%edx
		mov    0x138(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_129e71
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_129e71:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x50(%esp),%eax
		mov    %eax,0x13c(%esp)
		mov    0x54(%esp),%eax
		jle    gpoly_stb_md05uni_end
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_129d60
		mov    0x50(%esp),%esi
		jmp    jump_129cf6

	jump_129eb0:
		mov    0x8(%esp),%ebp
		mov    %ebp,0x88(%esp)
		mov    0x54(%esp),%ebp
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_129ed0
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_129ed0:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0xb4(%esp),%eax
		jle    gpoly_stb_md05uni_end
		mov    %esi,0x13c(%esp)
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_129d60
		mov    0x13c(%esp),%esi
		jmp    jump_129cf6

	jump_129f20:
		mov    EXPORT_SYMBOL(vec_screen_width),%ecx
		mov    %ecx,0xac(%esp)
		mov    $0x2,%ecx
		mov    %ecx,0x30(%esp)
		mov    0xc(%esp),%eax
		mov    %eax,0x150(%esp)
		mov    0x10c(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x110(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x114(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_129f8a
		mov    0x4(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    (%esp),%eax
		mov    %eax,0x88(%esp)
		jmp    jump_129f9f

	jump_129f8a:
		mov    (%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x4(%esp),%eax
		mov    %eax,0x88(%esp)

	jump_129f9f:
		mov    0x124(%esp),%ecx
		mov    0x128(%esp),%edx
		mov    0x12c(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x34(%esp),%esi
		mov    EXPORT_SYMBOL(vec_screen_width),%edi
		imul   %esi,%edi
		add    EXPORT_SYMBOL(vec_screen),%edi
		mov    0x34(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jg     gpoly_stb_md05uni_end
		mov    0x4c(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_129fee
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_129fee:
		sub    0x34(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x38(%esp),%esi
		mov    %esi,0x13c(%esp)
		mov    0x3c(%esp),%eax
		mov    %eax,%ebp
		je     jump_12a468
		mov    0x34(%esp),%esi
		or     %esi,%esi
		js     jump_12a3e0
		mov    0x13c(%esp),%esi
		jmp    jump_12a266

	gpoly_drwb_00:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,(%edi)

	gpoly_drwb_15:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x1(%edi)

	gpoly_drwb_14:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x2(%edi)

	gpoly_drwb_13:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x3(%edi)

	gpoly_drwb_12:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x4(%edi)

	gpoly_drwb_11:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x5(%edi)

	gpoly_drwb_10:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x6(%edi)

	gpoly_drwb_09:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x7(%edi)

	gpoly_drwb_08:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x8(%edi)

	gpoly_drwb_07:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0x9(%edi)

	gpoly_drwb_06:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xa(%edi)

	gpoly_drwb_05:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xb(%edi)

	gpoly_drwb_04:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xc(%edi)

	gpoly_drwb_03:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xd(%edi)

	gpoly_drwb_02:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xe(%edi)

	gpoly_drwb_01:
		mov    %ch,%ah
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		mov    EXPORT_SYMBOL(pixmap)+0x0(%eax),%al
		adc    0xfc(%esp),%bh
		mov    %al,0xf(%edi)
		add    $0x10,%edi
		subl   $0x10,0xdc(%esp)
		jg     gpoly_drwb_00

	jump_12a1d8:
		mov    0xb4(%esp),%eax
		mov    0xb8(%esp),%ebp
		mov    0xbc(%esp),%edi
		mov    0x13c(%esp),%esi
		sar    $0x10,%eax
		sub    %eax,%esi
		mov    0xb4(%esp),%eax
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		mov    %eax,0xb4(%esp)
		sar    $0x10,%eax
		add    %eax,%esi
		mov    0xb4(%esp),%eax
		mov    0xd0(%esp),%ecx
		mov    0xcc(%esp),%ebx
		mov    0xd8(%esp),%edx
		add    0x150(%esp),%bl
		adc    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_12a468

	jump_12a266:
		mov    %eax,0xb4(%esp)
		mov    %ebp,0xb8(%esp)
		mov    %edi,0xbc(%esp)
		sar    $0x10,%eax
		js     jump_12a360
		cmp    %esi,%eax
		jg     jump_12a300
		jl     jump_12a330

	jump_12a28e:
		mov    %esi,0x13c(%esp)
		mov    0xbc(%esp),%edi
		mov    %ecx,0xd0(%esp)
		mov    %ebx,0xcc(%esp)
		mov    %edx,0xd8(%esp)
		sar    $0x10,%ebp
		cmp    EXPORT_SYMBOL(vec_window_width),%ebp
		jg     jump_12a3d0

	jump_12a2c0:
		add    %esi,%edi
		sub    %esi,%ebp
		jle    jump_12a1d8
		mov    %ebp,%eax
		and    $0xf,%eax
		add    EXPORT_SYMBOL(gpoly_countdown)(,%eax,4),%edi
		mov    %ebp,0xdc(%esp)
		mov    0xf4(%esp),%ebp
		mov    0xf8(%esp),%esi
		jmp    *jt_gpoly_drwb(,%eax,4)


	jump_12a300:
		add    0x108(%esp),%bl
		adc    0xf4(%esp),%ecx
		adc    0xf8(%esp),%edx
		adc    0xfc(%esp),%bh
		inc    %esi
		cmp    %esi,%eax
		jle    jump_12a28e
		jmp    jump_12a300

	jump_12a330:
		sub    0x108(%esp),%bl
		sbb    0xf4(%esp),%ecx
		sbb    0xf8(%esp),%edx
		sbb    0xfc(%esp),%bh
		dec    %esi
		cmp    %esi,%eax
		jge    jump_12a28e
		jmp    jump_12a330

	jump_12a360:
		or     %esi,%esi
		je     jump_12a28e
		js     jump_12a370
		jmp    jump_12a3a0

	jump_12a370:
		add    0x108(%esp),%bl
		adc    0xf4(%esp),%ecx
		adc    0xf8(%esp),%edx
		adc    0xfc(%esp),%bh
		inc    %esi
		je     jump_12a28e
		jmp    jump_12a370

	jump_12a3a0:
		sub    0x108(%esp),%bl
		sbb    0xf4(%esp),%ecx
		sbb    0xf8(%esp),%edx
		sbb    0xfc(%esp),%bh
		dec    %esi
		je     jump_12a28e
		jmp    jump_12a3a0

	jump_12a3d0:
		mov    EXPORT_SYMBOL(vec_window_width),%ebp
		jmp    jump_12a2c0

	jump_12a3e0:
		add    0x150(%esp),%bl
		adc    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		mov    %eax,0xb4(%esp)
		sar    $0x10,%eax
		sub    %eax,0x13c(%esp)
		mov    0xb4(%esp),%eax
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		mov    %eax,0xb4(%esp)
		sar    $0x10,%eax
		add    %eax,0x13c(%esp)
		mov    0xb4(%esp),%eax
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_12a460
		inc    %esi
		js     jump_12a3e0
		mov    0x13c(%esp),%esi
		jmp    jump_12a266

	jump_12a460:
		mov    0x13c(%esp),%esi
		nop

	jump_12a468:
		decl   0x30(%esp)
		je     gpoly_stb_md05uni_end
		mov    %eax,0xb4(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_12a530
		mov    0x8(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x10(%esp),%eax
		mov    %eax,0x150(%esp)
		mov    0x118(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x11c(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x120(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x130(%esp),%ecx
		mov    0x134(%esp),%edx
		mov    0x138(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_12a4f1
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_12a4f1:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x50(%esp),%eax
		mov    %eax,0x13c(%esp)
		mov    0x54(%esp),%eax
		jle    gpoly_stb_md05uni_end
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_12a3e0
		mov    0x50(%esp),%esi
		jmp    jump_12a266

	jump_12a530:
		mov    0x8(%esp),%ebp
		mov    %ebp,0x88(%esp)
		mov    0x54(%esp),%ebp
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_12a550
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_12a550:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0xb4(%esp),%eax
		jle    gpoly_stb_md05uni_end
		mov    %esi,0x13c(%esp)
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_12a3e0
		mov    0x13c(%esp),%esi
		jmp    jump_12a266

	gpoly_stb_md05uni_end:
		/* start of added function footer */
		mov    0x17c(%esp),%esp
		popa
		ret


GLOBAL_FUNC (ASM_gpoly_stb_md05p64)
		pusha
		mov    %esp,0x17c(%eax)
		mov    %eax,%esp
		/* end of added function header */
		/* Invalid code was here */
		mov    0x170(%esp),%eax
		or     %eax,%eax
		jne    jump_12ab00
		mov    EXPORT_SYMBOL(vec_screen_width),%ecx
		mov    %ecx,0xac(%esp)
		mov    $0x2,%ecx
		mov    %ecx,0x30(%esp)
		mov    0x10c(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x110(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x114(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_12a68e
		mov    0x4(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    (%esp),%eax
		mov    %eax,0x88(%esp)
		jmp    jump_12a6a3

	jump_12a68e:
		mov    (%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x4(%esp),%eax
		mov    %eax,0x88(%esp)

	jump_12a6a3:
		mov    0x124(%esp),%ecx
		mov    0x128(%esp),%edx
		mov    0x12c(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x34(%esp),%esi
		mov    EXPORT_SYMBOL(vec_screen_width),%edi
		imul   %esi,%edi
		add    EXPORT_SYMBOL(vec_screen),%edi
		mov    0x34(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jg     gpoly_stb_md05p64_end
		mov    0x4c(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_12a6f2
		mov    EXPORT_SYMBOL(vec_window_height),%eax

	jump_12a6f2:
		sub    0x34(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x38(%esp),%esi
		mov    %esi,0x13c(%esp)
		mov    0x3c(%esp),%eax
		mov    %eax,%ebp
		je     jump_12a9d8
		mov    0x34(%esp),%esi
		or     %esi,%esi
		js     jump_12a980
		mov    0x13c(%esp),%esi
		jmp    jump_12a8c4

	gpoly_drwc_00:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,(%edi)

	gpoly_drwc_15:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x1(%edi)

	gpoly_drwc_14:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x2(%edi)

	gpoly_drwc_13:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x3(%edi)

	gpoly_drwc_12:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x4(%edi)

	gpoly_drwc_11:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x5(%edi)

	gpoly_drwc_10:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x6(%edi)

	gpoly_drwc_09:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x7(%edi)

	gpoly_drwc_08:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x8(%edi)

	gpoly_drwc_07:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x9(%edi)

	gpoly_drwc_06:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xa(%edi)

	gpoly_drwc_05:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xb(%edi)

	gpoly_drwc_04:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xc(%edi)

	gpoly_drwc_03:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xd(%edi)

	gpoly_drwc_02:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xe(%edi)

	gpoly_drwc_01:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xf(%edi)
		add    $0x10,%edi
		subl   $0x10,0xdc(%esp)
		jg     gpoly_drwc_00

	jump_12a85c:
		mov    0xb4(%esp),%eax
		mov    0xb8(%esp),%ebp
		mov    0xbc(%esp),%edi
		mov    0x13c(%esp),%esi
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		mov    0xd0(%esp),%ecx
		mov    0xcc(%esp),%ebx
		mov    0xd8(%esp),%edx
		add    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_12a9d8

	jump_12a8c4:
		mov    %eax,0xb4(%esp)
		mov    %ebp,0xb8(%esp)
		mov    %edi,0xbc(%esp)
		sar    $0x10,%eax
		cmp    %esi,%eax
		jg     jump_12a940
		jl     jump_12a960
	jump_12a8e6:
		mov    %esi,0x13c(%esp)
		mov    0xbc(%esp),%edi
		mov    %ecx,0xd0(%esp)
		mov    %ebx,0xcc(%esp)
		mov    %edx,0xd8(%esp)
		sar    $0x10,%ebp
		add    %esi,%edi
		sub    %esi,%ebp
		jle    jump_12a85c
		mov    %ebp,%eax
		and    $0xf,%eax
		add    EXPORT_SYMBOL(gpoly_countdown)(,%eax,4),%edi
		mov    %ebp,0xdc(%esp)
		mov    0xf4(%esp),%ebp
		mov    0xf8(%esp),%esi
		jmp    *jt_gpoly_drwc(,%eax,4)


	jump_12a940:
		add    0xf4(%esp),%ecx
		adc    0xf8(%esp),%edx
		adc    0xfc(%esp),%bh
		inc    %esi
		cmp    %esi,%eax
		jle    jump_12a8e6
		jmp    jump_12a940

	jump_12a960:
		sub    0xf4(%esp),%ecx
		sbb    0xf8(%esp),%edx
		sbb    0xfc(%esp),%bh
		dec    %esi
		cmp    %esi,%eax
		jge    jump_12a8e6
		jmp    jump_12a960

	jump_12a980:
		add    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_12a9d0
		inc    %esi
		js     jump_12a980
		mov    0x13c(%esp),%esi
		jmp    jump_12a8c4

	jump_12a9d0:
		mov    0x13c(%esp),%esi
		nop
	jump_12a9d8:
		decl   0x30(%esp)
		je     gpoly_stb_md05p64_end
		mov    %eax,0xb4(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_12aa90
		mov    0x8(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x118(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x11c(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x120(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x130(%esp),%ecx
		mov    0x134(%esp),%edx
		mov    0x138(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_12aa56
		mov    EXPORT_SYMBOL(vec_window_height),%eax
	jump_12aa56:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x50(%esp),%eax
		mov    %eax,0x13c(%esp)
		mov    0x54(%esp),%eax
		jle    gpoly_stb_md05p64_end
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_12a980
		mov    0x50(%esp),%esi
		jmp    jump_12a8c4

	jump_12aa90:
		mov    0x8(%esp),%ebp
		mov    %ebp,0x88(%esp)
		mov    0x54(%esp),%ebp
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_12aab0
		mov    EXPORT_SYMBOL(vec_window_height),%eax
	jump_12aab0:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0xb4(%esp),%eax
		jle    gpoly_stb_md05p64_end
		mov    %esi,0x13c(%esp)
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_12a980
		mov    0x13c(%esp),%esi
		jmp    jump_12a8c4

	jump_12ab00:
		mov    EXPORT_SYMBOL(vec_screen_width),%ecx
		mov    %ecx,0xac(%esp)
		mov    $0x2,%ecx
		mov    %ecx,0x30(%esp)
		mov    0x10c(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x110(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x114(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_12ab5f
		mov    0x4(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    (%esp),%eax
		mov    %eax,0x88(%esp)
		jmp    jump_12ab74

	jump_12ab5f:
		mov    (%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x4(%esp),%eax
		mov    %eax,0x88(%esp)
	jump_12ab74:
		mov    0x124(%esp),%ecx
		mov    0x128(%esp),%edx
		mov    0x12c(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x34(%esp),%esi
		mov    EXPORT_SYMBOL(vec_screen_width),%edi
		imul   %esi,%edi
		add    EXPORT_SYMBOL(vec_screen),%edi
		mov    0x34(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jg     gpoly_stb_md05p64_end
		mov    0x4c(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_12abc3
		mov    EXPORT_SYMBOL(vec_window_height),%eax
	jump_12abc3:
		sub    0x34(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x38(%esp),%esi
		mov    %esi,0x13c(%esp)
		mov    0x3c(%esp),%eax
		mov    %eax,%ebp
		je     jump_drwe_af28
		mov    0x34(%esp),%esi
		or     %esi,%esi
		js     jump_drwe_aed0
		mov    0x13c(%esp),%esi
		jmp    jump_drwe_ad95

	gpoly_drwd_00:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,(%edi)


	gpoly_drwd_15:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x1(%edi)

	gpoly_drwd_14:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x2(%edi)

	gpoly_drwd_13:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x3(%edi)

	gpoly_drwd_12:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x4(%edi)

	gpoly_drwd_11:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x5(%edi)

	gpoly_drwd_10:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x6(%edi)

	gpoly_drwd_09:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x7(%edi)

	gpoly_drwd_08:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x8(%edi)

	gpoly_drwd_07:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0x9(%edi)

	gpoly_drwd_06:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xa(%edi)

	gpoly_drwd_05:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xb(%edi)

	gpoly_drwd_04:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xc(%edi)

	gpoly_drwd_03:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xd(%edi)

	gpoly_drwd_02:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xe(%edi)

	gpoly_drwd_01:
		mov    %dl,%bl
		add    %ebp,%ecx
		mov    (%ebx),%al
		adc    %esi,%edx
		adc    0xfc(%esp),%bh
		mov    %al,0xf(%edi)
		add    $0x10,%edi
		subl   $0x10,0xdc(%esp)
		jg     gpoly_drwd_00

	jump_drwe_ad2d:
		mov    0xb4(%esp),%eax
		mov    0xb8(%esp),%ebp
		mov    0xbc(%esp),%edi
		mov    0x13c(%esp),%esi
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		mov    0xd0(%esp),%ecx
		mov    0xcc(%esp),%ebx
		mov    0xd8(%esp),%edx
		add    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_drwe_af28

	jump_drwe_ad95:
		mov    %eax,0xb4(%esp)
		mov    %ebp,0xb8(%esp)
		mov    %edi,0xbc(%esp)
		sar    $0x10,%eax
		js     jump_drwe_ae70
		cmp    %esi,%eax
		jg     jump_drwe_ae30
		jl     jump_drwe_ae50

	jump_drwe_adbd:
		mov    %esi,0x13c(%esp)
		mov    0xbc(%esp),%edi
		mov    %ecx,0xd0(%esp)
		mov    %ebx,0xcc(%esp)
		mov    %edx,0xd8(%esp)
		sar    $0x10,%ebp
		cmp    EXPORT_SYMBOL(vec_window_width),%ebp
		jg     jump_drwe_aec0

	jump_drwe_adef:
		add    %esi,%edi
		sub    %esi,%ebp
		jle    jump_drwe_ad2d
		mov    %ebp,%eax
		and    $0xf,%eax
		add    EXPORT_SYMBOL(gpoly_countdown)(,%eax,4),%edi
		mov    %ebp,0xdc(%esp)
		mov    0xf4(%esp),%ebp
		mov    0xf8(%esp),%esi
		jmp    *jt_gpoly_drwd(,%eax,4)


	jump_drwe_ae30:
		add    0xf4(%esp),%ecx
		adc    0xf8(%esp),%edx
		adc    0xfc(%esp),%bh
		inc    %esi
		cmp    %esi,%eax
		jle    jump_drwe_adbd
		jmp    jump_drwe_ae30

	jump_drwe_ae50:
		sub    0xf4(%esp),%ecx
		sbb    0xf8(%esp),%edx
		sbb    0xfc(%esp),%bh
		dec    %esi
		cmp    %esi,%eax
		jge    jump_drwe_adbd
		jmp    jump_drwe_ae50

	jump_drwe_ae70:
		or     %esi,%esi
		je     jump_drwe_adbd
		js     jump_drwe_ae80
		jmp    jump_drwe_aea0

	jump_drwe_ae80:
		add    0xf4(%esp),%ecx
		adc    0xf8(%esp),%edx
		adc    0xfc(%esp),%bh
		inc    %esi
		je     jump_drwe_adbd
		jmp    jump_drwe_ae80

	jump_drwe_aea0:
		sub    0xf4(%esp),%ecx
		sbb    0xf8(%esp),%edx
		sbb    0xfc(%esp),%bh
		dec    %esi
		je     jump_drwe_adbd
		jmp    jump_drwe_aea0

	jump_drwe_aec0:
		mov    EXPORT_SYMBOL(vec_window_width),%ebp
		jmp    jump_drwe_adef

	jump_drwe_aed0:
		add    0xe4(%esp),%ecx
		adc    0xec(%esp),%edx
		adc    0xe8(%esp),%bh
		add    0x84(%esp),%eax
		add    0x88(%esp),%ebp
		add    0xac(%esp),%edi
		decl   0xf0(%esp)
		je     jump_drwe_af20
		inc    %esi
		js     jump_drwe_aed0
		mov    0x13c(%esp),%esi
		jmp    jump_drwe_ad95

	jump_drwe_af20:
		mov    0x13c(%esp),%esi
		nop
	jump_drwe_af28:
		decl   0x30(%esp)
		je     gpoly_stb_md05p64_end
		mov    %eax,0xb4(%esp)
		mov    0x7c(%esp),%eax
		or     %eax,%eax
		js     jump_drwe_afe0
		mov    0x8(%esp),%eax
		mov    %eax,0x84(%esp)
		mov    0x118(%esp),%eax
		mov    %eax,0xe4(%esp)
		mov    0x11c(%esp),%eax
		mov    %eax,0xec(%esp)
		mov    0x120(%esp),%eax
		mov    %eax,0xe8(%esp)
		mov    0x130(%esp),%ecx
		mov    0x134(%esp),%edx
		mov    0x138(%esp),%ebx
		add    EXPORT_SYMBOL(vec_map),%ebx
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_drwe_afa6
		mov    EXPORT_SYMBOL(vec_window_height),%eax
	jump_drwe_afa6:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0x50(%esp),%eax
		mov    %eax,0x13c(%esp)
		mov    0x54(%esp),%eax
		jle    gpoly_stb_md05p64_end
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_drwe_aed0
		mov    0x50(%esp),%esi
		jmp    jump_drwe_ad95

	jump_drwe_afe0:
		mov    0x8(%esp),%ebp
		mov    %ebp,0x88(%esp)
		mov    0x54(%esp),%ebp
		mov    0x64(%esp),%eax
		cmp    EXPORT_SYMBOL(vec_window_height),%eax
		jle    jump_drwe_b000
		mov    EXPORT_SYMBOL(vec_window_height),%eax
	jump_drwe_b000:
		sub    0x4c(%esp),%eax
		mov    %eax,0xf0(%esp)
		mov    0xb4(%esp),%eax
		jle    gpoly_stb_md05p64_end
		mov    %esi,0x13c(%esp)
		mov    0x4c(%esp),%esi
		or     %esi,%esi
		js     jump_drwe_aed0
		mov    0x13c(%esp),%esi
		jmp    jump_drwe_ad95


	gpoly_stb_md05p64_end:
		/* start of added function footer */
		mov    0x17c(%esp),%esp
		popa
		ret


jt_gpoly_drwa:
		.long   gpoly_drwa_00
		.long   gpoly_drwa_01
		.long   gpoly_drwa_02
		.long   gpoly_drwa_03
		.long   gpoly_drwa_04
		.long   gpoly_drwa_05
		.long   gpoly_drwa_06
		.long   gpoly_drwa_07
		.long   gpoly_drwa_08
		.long   gpoly_drwa_09
		.long   gpoly_drwa_10
		.long   gpoly_drwa_11
		.long   gpoly_drwa_12
		.long   gpoly_drwa_13
		.long   gpoly_drwa_14
		.long   gpoly_drwa_15

jt_gpoly_drwb:
		.long   gpoly_drwb_00
		.long   gpoly_drwb_01
		.long   gpoly_drwb_02
		.long   gpoly_drwb_03
		.long   gpoly_drwb_04
		.long   gpoly_drwb_05
		.long   gpoly_drwb_06
		.long   gpoly_drwb_07
		.long   gpoly_drwb_08
		.long   gpoly_drwb_09
		.long   gpoly_drwb_10
		.long   gpoly_drwb_11
		.long   gpoly_drwb_12
		.long   gpoly_drwb_13
		.long   gpoly_drwb_14
		.long   gpoly_drwb_15

jt_gpoly_drwc:
		.long   gpoly_drwc_00
		.long   gpoly_drwc_01
		.long   gpoly_drwc_02
		.long   gpoly_drwc_03
		.long   gpoly_drwc_04
		.long   gpoly_drwc_05
		.long   gpoly_drwc_06
		.long   gpoly_drwc_07
		.long   gpoly_drwc_08
		.long   gpoly_drwc_09
		.long   gpoly_drwc_10
		.long   gpoly_drwc_11
		.long   gpoly_drwc_12
		.long   gpoly_drwc_13
		.long   gpoly_drwc_14
		.long   gpoly_drwc_15

jt_gpoly_drwd:
		.long   gpoly_drwd_00
		.long   gpoly_drwd_01
		.long   gpoly_drwd_02
		.long   gpoly_drwd_03
		.long   gpoly_drwd_04
		.long   gpoly_drwd_05
		.long   gpoly_drwd_06
		.long   gpoly_drwd_07
		.long   gpoly_drwd_08
		.long   gpoly_drwd_09
		.long   gpoly_drwd_10
		.long   gpoly_drwd_11
		.long   gpoly_drwd_12
		.long   gpoly_drwd_13
		.long   gpoly_drwd_14
		.long   gpoly_drwd_15

